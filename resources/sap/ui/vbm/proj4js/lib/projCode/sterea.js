Proj4js.Proj.sterea={dependsOn:'gauss',init:function(){Proj4js.Proj['gauss'].init.apply(this);if(!this.rc){Proj4js.reportError("sterea:init:E_ERROR_0");return}this.sinc0=Math.sin(this.phic0);this.cosc0=Math.cos(this.phic0);this.R2=2.0*this.rc;if(!this.title)this.title="Oblique Stereographic Alternative"},forward:function(p){var s,c,a,k;p.x=Proj4js.common.adjust_lon(p.x-this.long0);Proj4js.Proj['gauss'].forward.apply(this,[p]);s=Math.sin(p.y);c=Math.cos(p.y);a=Math.cos(p.x);k=this.k0*this.R2/(1.0+this.sinc0*s+this.cosc0*c*a);p.x=k*c*Math.sin(p.x);p.y=k*(this.cosc0*s-this.sinc0*c*a);p.x=this.a*p.x+this.x0;p.y=this.a*p.y+this.y0;return p},inverse:function(p){var s,a,l,b,r;p.x=(p.x-this.x0)/this.a;p.y=(p.y-this.y0)/this.a;p.x/=this.k0;p.y/=this.k0;if((r=Math.sqrt(p.x*p.x+p.y*p.y))){var c=2.0*Math.atan2(r,this.R2);s=Math.sin(c);a=Math.cos(c);b=Math.asin(a*this.sinc0+p.y*s*this.cosc0/r);l=Math.atan2(p.x*s,r*this.cosc0*a-p.y*this.sinc0*s)}else{b=this.phic0;l=0.}p.x=l;p.y=b;Proj4js.Proj['gauss'].inverse.apply(this,[p]);p.x=Proj4js.common.adjust_lon(p.x+this.long0);return p}};
