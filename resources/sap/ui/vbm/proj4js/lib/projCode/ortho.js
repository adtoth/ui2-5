Proj4js.Proj.ortho={init:function(d){;this.sin_p14=Math.sin(this.lat0);this.cos_p14=Math.cos(this.lat0)},forward:function(p){var s,c;var d;var a;var k;var g;var l=p.x;var b=p.y;d=Proj4js.common.adjust_lon(l-this.long0);s=Math.sin(b);c=Math.cos(b);a=Math.cos(d);g=this.sin_p14*s+this.cos_p14*c*a;k=1.0;if((g>0)||(Math.abs(g)<=Proj4js.common.EPSLN)){var x=this.a*k*c*Math.sin(d);var y=this.y0+this.a*k*(this.cos_p14*s-this.sin_p14*c*a)}else{Proj4js.reportError("orthoFwdPointError")}p.x=x;p.y=y;return p},inverse:function(p){var r;var z;var s,c;var t;var a;var l,b;p.x-=this.x0;p.y-=this.y0;r=Math.sqrt(p.x*p.x+p.y*p.y);if(r>this.a+.0000001){Proj4js.reportError("orthoInvDataError")}z=Proj4js.common.asinz(r/this.a);s=Math.sin(z);c=Math.cos(z);l=this.long0;if(Math.abs(r)<=Proj4js.common.EPSLN){b=this.lat0}b=Proj4js.common.asinz(c*this.sin_p14+(p.y*s*this.cos_p14)/r);a=Math.abs(this.lat0)-Proj4js.common.HALF_PI;if(Math.abs(a)<=Proj4js.common.EPSLN){if(this.lat0>=0){l=Proj4js.common.adjust_lon(this.long0+Math.atan2(p.x,-p.y))}else{l=Proj4js.common.adjust_lon(this.long0-Math.atan2(-p.x,p.y))}}a=c-this.sin_p14*Math.sin(b);p.x=l;p.y=b;return p}};
