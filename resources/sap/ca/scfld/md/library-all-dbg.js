// This file has been generated by the SAPUI5 'AllInOne' Builder
sap.ui.controller("sap.ca.scfld.md.view.App", {
	onInit : function() {

	},
	
	onExit : function() {

	}
});
sap.ui.controller("sap.ca.scfld.md.view.MainSplitContainer", {

	onInit : function() {
		sap.ca.scfld.md.app.Application.getImpl().setSplitContainer(this.byId("MainSplitContainer"));
	}

});
jQuery.sap.declare('sap.ca.scfld.md.library-all');
jQuery.sap.declare('sap.ca.scfld.md.view.App.controller'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.ca.scfld.md.view.MainSplitContainer.controller'); // raw module, declared by SAPUI5 'AllInOne' Builder
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.ApplicationFacade') ) {
jQuery.sap.declare("sap.ca.scfld.md.ApplicationFacade");

sap.ui.base.Object.extend("sap.ca.scfld.md.ApplicationFacade", {

	
  /**
   * This class represents a Master Detail App. It provides access to generic services.
   * @class
   * Note that the App does not create an instance of this class on its own.
   * The App will get access to this instance in its implementation of &lt;identity&gt;.Configuration.getApplicationParameters(oApplicationFacade).
   * It is recommended that the app stores the reference to this instance in an appropriate variable .
   */	
	constructor : function(oApplicationImplementation){
		this.oApplicationImplementation = oApplicationImplementation;
	},
	
	/**
	 * Use this method to access the resource bundle of the App
	 * @returns the resource bundle of this App
	 */
	getResourceBundle : function(){
		return this.oApplicationImplementation.getResourceBundle();
	},


  /**
   * Return a specific ODataModel based on its name as defined in the configuration.</br>
   * Note that there is a special logic in case the specified name is <i>i18n</i>. In this case the
   * resource model for this App is returned.
   * @param sName the name of the ODataModel to retrieve, or undefined for the default model
   * @returns {sap.ui.model.Model } the requested ODataModel. Actually this will be an
   * instance of <code>sap.ui.model.odata.ODataModel</code>. The only exception is, when <code>sName == 'i18n'</code>.
   * In this case it is an instance of <code>sap.ui.model.resource.ResourceModel</code>.  
   */
  getODataModel : function(sName) {
      return this.oApplicationImplementation.getODataModel(sName);
  },

	/**
	 * Utility function to determine if we are running the application against
	 * some mock data
	 * 
	 * @returns {boolean} A flag depending on the <code>responderOn</code> uri
	 *          parameter
	 */
	isMock : function() {
		return this.oApplicationImplementation.isMock();
	}	
});

}; // end of sap/ca/scfld/md/ApplicationFacade.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.Startup') ) {
jQuery.sap.declare("sap.ca.scfld.md.Startup");

sap.ca.scfld.md.Startup = {};
sap.ca.scfld.md.Startup.init = function(sIdentity, oMainCtr) {

//	// local resources
//	sap.ui.localResources("view");

	var fStartApplication = function() {
		var oBody = oMainCtr.byId("fioriContent");
		if (oBody) {
			// oBody.setAttribute("id", "content");
			jQuery.sap.require("sap.ca.scfld.md.app.Application");
			var app = new sap.ca.scfld.md.app.Application({
				identity : sIdentity,
                component: oMainCtr.getView().getViewData().component,
				oViewHook : oBody.getId()
			});
			app.setIdentity(sIdentity);
			return true;
		}
		return false;
	};
	if (!fStartApplication()) {
		jQuery(fStartApplication);
	}

	/**
	 * Hide Master SplitApp page when needed. This could be changed if UI5 team
	 * provide a way to hide the master
	 */
	var sStyle = "<style> "
			+ ".sapMSplitAppFullscreen > .sapMSplitContainerMaster { position: fixed; height: 0; left: -10000px; width: 0; } "
			+ ".sapMSplitAppFullscreen > .sapMSplitContainerDetail .sapMSplitContainerMasterBtn { display: none; } "
			+ "</style>";
	jQuery("head").append(sStyle);
};

}; // end of sap/ca/scfld/md/Startup.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.app.ButtonListHelper') ) {
jQuery.sap.declare("sap.ca.scfld.md.app.ButtonListHelper");
jQuery.sap.require('sap.ca.ui.dialog.Dialog'); // unlisted dependency retained


sap.ui.base.Object.extend("sap.ca.scfld.md.app.ButtonListHelper", {

	constructor : function(oApplicationImplementation, iMode) {
		this.oApplicationImplementation = oApplicationImplementation;
		this.iMode = iMode;
		if (this.iMode == 20) {
			this.oBar = new sap.m.Bar();
		} else if (this.iMode >= 10) {
			this.oActionSheet = new sap.m.ActionSheet();
			this.oActionSheet.setPlacement(sap.m.PlacementType.Top);
			this.oActionSheet.setShowCancelButton(true);
		}
		this.aButtons = [];
		this.startBuild();
		if (this.iMode == 25){
			this.sDirection = "Left";
		} else {
			this.sDirection = "Right"
		}
	},

	addButtonListHelper : function(oButtonListHelper) {
		if (this.oChild) {
			this.oChild.addButtonListHelper(oButtonListHelper);
		} else {
			this.oChild = oButtonListHelper;
		}
	},

	startBuild : function() {
		this.mButtons = {};
		this.aCallBacks = [];
		this.oPositions = {
			iActive : 0,
			iControlPosition : 0
		};
		this.bHasOverflow = false;
		if (this.oChild) {
			this.oChild.startBuild();
		}
	},

	endBuild : function() {
		for ( var i = this.oPositions.iActive; i < this.aButtons.length; i++) {
			var oControl = this.aButtons[i];
			if (oControl.oButton) {
				oControl.oButton.setVisible(false);
			}
			if (oControl.oSelect) {
				oControl.oButton.setVisible(false);
			}
		}
		if (this.oChild) {
			this.oChild.endBuild();
		}
		this.bIsOverflowReplaced = false;
	},
	
	destroy : function(){
		for (var i = 0; i < this.aButtons.length; i++){
			var oControlObject = this.aButtons[i];
			if (oControlObject.oButton){
				oControlObject.oButton.destroy(true);
			}
			if (oControlObject.oSelect){
				oControlObject.oSelect.destroy(true);
			}
		}
		if (this.oBar){
			this.oBar.destroy();
		}
		if (this.oActionSheet){
			this.oActionSheet.destroy();
		}
		if (this.oChild) {
			this.oChild.destroy();
		}
	},

	ensureButton : function(oBtnMeta, sType, iMaxCountBeforeOverflow) {
		if (iMaxCountBeforeOverflow && this.oPositions.iActive >= iMaxCountBeforeOverflow) {
			if (!this.bHasOverflow) {
				if (!this.oOverflowList) {
					this.oOverflowList = new sap.ca.scfld.md.app.ButtonListHelper(this.oApplicationImplementation, 10);
					this.addButtonListHelper(this.oOverflowList);
					this.oOverflowList.oBarList = this;
				}
				this.iOverflowPosition = this.oPositions.iActive;
				this.ensureButton(sap.ca.scfld.md.app.ButtonListHelper.getOverflowMeta(this), "b");
				this.bHasOverflow = true;
			}
			return this.oOverflowList.ensureButton(oBtnMeta, sType);
		} else {
			var iButtonsCount = this.oPositions.iActive;
			if (iButtonsCount == this.aButtons.length) {
				this.aButtons.push({});
			}
		}
		return this.ensureControlAtPosition(oBtnMeta, sType, iButtonsCount, this.oPositions);
	},

	setBtnEnabled : function(sId, bEnabled) {
		var oButton = this.mButtons[sId];
		if (oButton) {
			oButton.setEnabled(bEnabled);
		} else if (this.oChild) {
			this.oChild.setBtnEnabled(sId, bEnabled);
		}
	},

	ensureControlAtPosition : function(oBtnMeta, sType, iButtonsCount, oPositions) {
		var oControlObject = this.aButtons[iButtonsCount];
		if (sType == "b" || this.iMode < 20) { // selects are only possible in bars
			if (oControlObject.oSelect) {
				oPositions.iControlPosition = this.oBar["indexOfContent" + this.sDirection](oControlObject.oSelect);
				oControlObject.oSelect.setVisible(false);
			}
			if (oControlObject.oButton) {
				oControlObject.oButton.setVisible(true);
				if (this.oBar) {
					var iControlPosition = this.oBar["indexOfContent" + this.sDirection](oControlObject.oButton);
					if (iControlPosition > oPositions.iControlPosition) {
						oPositions.iControlPosition = iControlPosition;
					}
				}
			} else {
				oControlObject.oButton = new sap.m.Button();
				oControlObject.oButton.attachPress(jQuery.proxy(function(oEvent) {
					if (this.aCallBacks[iButtonsCount]) {
						this.aCallBacks[iButtonsCount](oEvent);
					}
				}, this));
				oPositions.iControlPosition++;
				if (this.iMode >= 20) {
					this.oBar["insertContent"+ this.sDirection](oControlObject.oButton, oPositions.iControlPosition);
				} else if (this.iMode >= 10) {
					this.oActionSheet.addButton(oControlObject.oButton);
				} else if (this.iMode == 5){
					this.oBar.insertContentLeft(oControlObject.oButton, oPositions.iControlPosition);
				}
			}
			if (oBtnMeta.sI18nBtnTxt) {
				var oBundle = this.oApplicationImplementation.AppI18nModel.getResourceBundle();
				var sText = oBundle.getText(oBtnMeta.sI18nBtnTxt)
			} else {
				var sText = oBtnMeta.sBtnTxt
			}
			if (this.iMode < 20 || !oBtnMeta.sIcon){
			  if (sText != oControlObject.oButton.getText()) {
			  	oControlObject.oButton.setText(sText);
			  }
			}
			if (this.iMode == 20) { // styles are only used in bars
				if (oControlObject.oButton.getType() != oBtnMeta.style) {
					oControlObject.oButton.setType(oBtnMeta.style)
				}
			}
			if (sType == "b") {
				this.aCallBacks[iButtonsCount] = oBtnMeta.onBtnPressed;
			} else {
				this.aCallBacks[iButtonsCount] = this.getSelectReplacement(oBtnMeta);
			}
			var oRet = oControlObject.oButton;
		} else { // select
			if (oControlObject.oButton) {
				oPositions.iControlPosition = this.oBar["indexOfContent" + this.sDirection](oControlObject.oButton);
				oControlObject.oButton.setVisible(false);
			}
			if (oControlObject.oSelect) {
				oControlObject.oSelect.setVisible(true);
				var iControlPosition = this.oBar["indexOfContent" + this.sDirection](oControlObject.oSelect);
				if (iControlPosition > oPositions.iControlPosition) {
					oPositions.iControlPosition = iControlPosition;
				}
				oControlObject.oSelect.destroyItems();
			} else {
				oControlObject.oSelect = new sap.m.Select();
				oControlObject.oSelect.setType(sap.m.SelectType.IconOnly);
				oControlObject.oSelect.setAutoAdjustWidth(true);
				oPositions.iControlPosition++;
				this.oBar["insertContent" + this.sDirection](oControlObject.oSelect, oPositions.iControlPosition);
				oControlObject.oSelect.attachChange(jQuery.proxy(function(oEvent) {
					var sKey = oEvent.getSource().getSelectedKey();
					if (this.aCallBacks[iButtonsCount]) {
						this.aCallBacks[iButtonsCount](sKey);
					}
				}, this));
			}
			if (oBtnMeta.sSelectedItemKey) {
				oControlObject.oSelect.setSelectedItem(oBtnMeta.sSelectedItemKey);
			}
			for ( var i = 0; i < oBtnMeta.aItems.length; i++) {
				var oSettings = oBtnMeta.aItems[i];
				var oItem = new sap.ui.core.Item(oSettings);
				oControlObject.oSelect.addItem(oItem);
			}
			if (oBtnMeta.sSelectedItemKey) {
				oControlObject.oSelect.setSelectedKey(oBtnMeta.sSelectedItemKey);
			}
			this.aCallBacks[iButtonsCount] = oBtnMeta.onChange;
			oRet = oControlObject.oSelect;
		}
		if (oBtnMeta.sIcon != oRet.getIcon()) {
			oRet.setIcon(oBtnMeta.sIcon);
		}
		if (oBtnMeta.sId) {
			this.mButtons[oBtnMeta.sId] = oRet;
		}
		oRet.setEnabled(!oBtnMeta.bDisabled);
		oPositions.iActive++;
		return oRet;
	},

	/*
	 * getSelectReplacement: function(oBtnMeta){ return jQuery.proxy(function(oEvent){ var iButtonsCount =
	 * this.oBarList.iOverflowPosition; oPositions = { iActive : 0, iControlPosition :
	 * this.oBarList.oBar.indexOfContentRight(this.oBarList.aButtons[iButtonsCount].oButton), }; var oSelectMeta = {}
	 * jQuery.extend(oSelectMeta, oBtnMeta); var oBarList = this.oBarList; oSelectMeta.onChange = function(oKey){
	 * oBarList.revertOverflowReplacement(); oBtnMeta.onChange(oKey); };
	 * this.oBarList.ensureControlAtPosition(oSelectMeta, "s", iButtonsCount, oPositions); //
	 * this.oBarList.aButtons[iButtonsCount].oSelect.getPopup().open(); this.oBarList.bIsOverflowReplaced = true; },
	 * this); },
	 */

	getSelectReplacement : function(oBtnMeta) {
		var sSelectedItemKey = oBtnMeta.sSelectedItemKey;
		var fClose = function(oResult){
			if (oResult.selectedIndex >= 0){
				var sSelectedItemKeyNew = oBtnMeta.aItems[oResult.selectedIndex].key;
				if (sSelectedItemKeyNew != sSelectedItemKey){
					sSelectedItemKey = sSelectedItemKeyNew;
				  oBtnMeta.onChange(sSelectedItemKey);
				}
			}			
		};		
		return function(oEvent) {
			var aItems = [];
			var iSelection = 0;
			for ( var i = 0; i < oBtnMeta.aItems.length; i++) {
				aItems.push({
					itemContent : oBtnMeta.aItems[i].text
				});
				if (oBtnMeta.aItems[i].key == sSelectedItemKey) {
					iSelection = i;
				}
			}
			sSelectedItemKey = oBtnMeta.aItems[iSelection].key;
			sap.ca.ui.dialog.selectItem.open({
				title : oEvent.getSource().getText(),
				items : aItems,
				defaultIndex : iSelection
			}, fClose);
		};
	},

	revertOverflowReplacement : function() {
		if (this.bIsOverflowReplaced) {
			this.ensureControlAtPosition(sap.ca.scfld.md.app.ButtonListHelper.getOverflowMeta(this), "b",
					this.iOverflowPosition, {});
			this.bIsOverflowReplaced = false;
		}
	},

	setBtnText : function(sId, sText) {
		var oButton = this.mButtons[sId];
		if (oButton) {
			oButton.setText(sText);
		} else if (this.oChild) {
			this.oChild.setText(sId, sText);
		}
	}
});

sap.ca.scfld.md.app.ButtonListHelper.getOverflowMeta = function(oOwner) {
	return {
		sIcon : "sap-icon://overflow",
		onBtnPressed : function(evt) {
			oOwner.oOverflowList.oActionSheet.openBy(evt.getSource());
		}
	};
};

}; // end of sap/ca/scfld/md/app/ButtonListHelper.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.app.CommonHeaderFooterHelper') ) {
jQuery.sap.declare("sap.ca.scfld.md.app.CommonHeaderFooterHelper");
jQuery.sap.require('sap.ushell.ui.footerbar.JamShareButton'); // unlisted dependency retained

jQuery.sap.require('sap.ushell.ui.footerbar.JamDiscussButton'); // unlisted dependency retained

jQuery.sap.require('sap.ushell.ui.footerbar.AddBookmarkButton'); // unlisted dependency retained


jQuery.sap.require('sap.ushell.services.AppConfiguration'); // unlisted dependency retained


// hack: only a temporary workaround
if (!sap.ushell.services.AppConfiguration.getSettingsControl) {
	sap.ushell.services.AppConfiguration.getSettingsControl = function() {
		return new sap.m.Button({
			icon : "sap-icon://accidental-leave"
		});
	}
}

sap.ui.base.Object
		.extend(
				"sap.ca.scfld.md.app.CommonHeaderFooterHelper",
				{

					constructor : function(oApplicationImplementation, detailHeaderFooterRules) {
						this.oAppImp = oApplicationImplementation;
						this.detailHeaderFooterRules = detailHeaderFooterRules;
					},

					startBuild : function(oController, oOptions, oStartOptions) {
						oController._oHeaderFooterOptions = oOptions;
						var oPage = oController.getView().getContent()[0];
						if (oController._oControlStore) {
							oController._oControlStore.oButtonListHelper.startBuild();
						} else {
							oController._oControlStore = {};
							if (oStartOptions) {
								jQuery.extend(oController._oControlStore, oStartOptions);
							}
							oController._oControlStore.oButtonListHelper = new sap.ca.scfld.md.app.ButtonListHelper(this.oAppImp, 20);
							this.oAppImp.registerExitModule(function(){
								oController._oControlStore.oButtonListHelper.destroy();
							});
							oPage.setFooter(oController._oControlStore.oButtonListHelper.oBar);
						}
						// ToDo Header
						return oPage;
					},

					endBuild : function(oController) {
						oController._oControlStore.oButtonListHelper.endBuild();
					},

					defineFooterRight : function(oController, oPage, iFooterRightCount, bIncludeGenerics, bIncludePosNeg) {

						var bHasButton = false;
						// standard Buttons
						if (oController._oHeaderFooterOptions.oEditBtn) {
							var oBtnMeta = {};
							jQuery.extend(oBtnMeta, oController._oHeaderFooterOptions.oEditBtn);
							oBtnMeta.style = sap.m.ButtonType.Emphasized;
							oController._oControlStore.oButtonListHelper.ensureButton(oBtnMeta, "b", iFooterRightCount);
							bHasButton = true;
						} else /* if (bIncludePosNeg) */{
							if (oController._oHeaderFooterOptions.oPositiveAction) {
								var oBtnMeta = {};
								jQuery.extend(oBtnMeta, oController._oHeaderFooterOptions.oPositiveAction);
								oBtnMeta.style = sap.m.ButtonType.Accept;
								oController._oControlStore.oButtonListHelper.ensureButton(oBtnMeta, "b", iFooterRightCount);
								bHasButton = true;
							}
							if (oController._oHeaderFooterOptions.oNegativeAction) {
								var oBtnMeta = {};
								jQuery.extend(oBtnMeta, oController._oHeaderFooterOptions.oNegativeAction);
								oBtnMeta.style = sap.m.ButtonType.Reject;
								oController._oControlStore.oButtonListHelper.ensureButton(oBtnMeta, "b", iFooterRightCount);
								bHasButton = true;
							}
						}

						// App specific buttons
						if (oController._oHeaderFooterOptions.buttonList) {
							for (var i = 0; i < oController._oHeaderFooterOptions.buttonList.length; i++) {
								var oBtnMeta = {};
								jQuery.extend(oBtnMeta, oController._oHeaderFooterOptions.buttonList[i]);
								oBtnMeta.style = sap.m.ButtonType.Default;
								oController._oControlStore.oButtonListHelper.ensureButton(oBtnMeta, "b", iFooterRightCount);
								bHasButton = true;
							}
						}
						if (bIncludeGenerics) {
							var aGenButtons = this.getGenericButtons(iFooterRightCount, oController,
									oController._oControlStore.oButtonListHelper);
							bHasButton = bHasButton || aGenButtons.length > 0;
						}
						bHasButton = this.defineShareButton(oController) || bHasButton;
						return bHasButton;
					},

					defineShareButton : function(oController) {
						var aButtons = this.getShareButtons(oController);
						if (aButtons.length == 0) {
							return false;
						}
						if (!oController._oControlStore.oShareSheet) {
							oController._oControlStore.oShareSheet = new sap.m.ActionSheet();
							oController._oControlStore.oShareSheet.setShowCancelButton(true);
							oController._oControlStore.oShareSheet.setPlacement(sap.m.PlacementType.Top);
						} else {
							oController._oControlStore.oShareSheet.removeAllButtons();
						}
						var oBtnMeta = {
							sIcon : "sap-icon://action",
							onBtnPressed : function(evt) {
								if (oController._oHeaderFooterOptions.oJamOptions){
								  if (oController._oHeaderFooterOptions.oJamOptions.fGetShareSettings) {
									  var oShareSettings = oController._oHeaderFooterOptions.oJamOptions.fGetShareSettings();
									  if (oShareSettings) {
									  	oController._oControlStore.oJamShareButton.setJamData(oShareSettings);
									  }
								  }
								  if (oController._oHeaderFooterOptions.oJamOptions.fGetDiscussSettings) {
								  	var oDiscussSettings = oController._oHeaderFooterOptions.oJamOptions.fGetDiscussSettings();
									  if (oDiscussSettings) {
									  	oController._oControlStore.oJamDiscussButton.setJamData(oDiscussSettings);
									  }
									}
								}
								oController._oControlStore.oShareSheet.openBy(evt.getSource());
							}
						};
						oController._oControlStore.oButtonListHelper.ensureButton(oBtnMeta, "b");
						for (var i = 0; i < aButtons.length; i++) {
							oController._oControlStore.oShareSheet.addButton(aButtons[i]);
						}
						return true;
					},


					hasShareButtons : function(oController) {
						return oController.isMainScreen() || !!(oController._oHeaderFooterOptions.oEmailSettings
								|| (oController._oHeaderFooterOptions.oJamOptions && (oController._oHeaderFooterOptions.oJamOptions.oShareSettings
										|| oController._oHeaderFooterOptions.oJamOptions.fGetShareSettings || oController._oHeaderFooterOptions.oJamOptions.oDiscussSettings || oController._oHeaderFooterOptions.oJamOptions.fGetDiscussSettings))
								|| oController._oHeaderFooterOptions.oAddBookmarkSettings || (oController._oHeaderFooterOptions.additionalShareButtonList && oController._oHeaderFooterOptions.additionalShareButtonList.length > 0));
					},

					getShareButtons : function(oController) {
						var aRet = [];
						var oEmailButton = this.getEmailButton(oController);
						var oJamShareButton = this.getJamShareButton(oController);
						var oJamDiscussButton = this.getJamDiscussButton(oController);
						var oBookmarksButton = this.getBookmarkButton(oController);
						if (oEmailButton) {
							aRet.push(oEmailButton);
						}
						if (oJamShareButton) {
							aRet.push(oJamShareButton);
						}
						if (oJamDiscussButton) {
							aRet.push(oJamDiscussButton);
						}
						if (oBookmarksButton) {
							aRet.push(oBookmarksButton);
						}
						if (oController._oHeaderFooterOptions.additionalShareButtonList) {
							var aAddButtons = this.getAdditionalShareButtons(oController);
							aRet = aRet.concat(aAddButtons);
						}
						return aRet;
					},

					getEmailButton : function(oController) {
						if (!oController._oHeaderFooterOptions.oEmailSettings) {
							return null;
						}
						if (!oController._oControlStore.oEmailButton) {
							oController._oControlStore.oEmailButton = new sap.m.Button();
							oController._oControlStore.oEmailButton.setIcon("sap-icon://email");
							oController._oControlStore.oEmailButton.setText(this.oAppImp.UilibI18nModel.getResourceBundle().getText(
									"SEND_EMAIL"));
							oController._oControlStore.oEmailButton.attachPress(function() {
								if (oController._oHeaderFooterOptions.oEmailSettings.fGetMailBody) {
									var sBody = oController._oHeaderFooterOptions.oEmailSettings.fGetMailBody();
								} else {
									var sBody = null;
								}
								sap.m.URLHelper.triggerEmail(oController._oHeaderFooterOptions.oEmailSettings.sRecepient,
										oController._oHeaderFooterOptions.oEmailSettings.sSubject, sBody);
							});
						}
						this.supportEnablement(oController, oController._oControlStore.oEmailButton,
								oController._oHeaderFooterOptions.oEmailSettings);
						return oController._oControlStore.oEmailButton;
					},

					getJamShareButton : function(oController) {
						if (!oController._oHeaderFooterOptions.oJamOptions
								|| !(oController._oHeaderFooterOptions.oJamOptions.oShareSettings || oController._oHeaderFooterOptions.oJamOptions.fGetShareSettings)) {
							return null;
						}
						if (!oController._oControlStore.oJamShareButton) {
							oController._oControlStore.oJamShareButton = new sap.ushell.ui.footerbar.JamShareButton({});
						}
						if (oController._oHeaderFooterOptions.oJamOptions.oShareSettings) {
							oController._oControlStore.oJamShareButton
									.setJamData(oController._oHeaderFooterOptions.oJamOptions.oShareSettings);
							this.supportEnablement(oController, oController._oControlStore.oJamShareButton,
									oController._oHeaderFooterOptions.oJamOptions.oShareSettings);
						}
						return oController._oControlStore.oJamShareButton;
					},

					getJamDiscussButton : function(oController) {
						if (!oController._oHeaderFooterOptions.oJamOptions ||
								 !(oController._oHeaderFooterOptions.oJamOptions.oDiscussSettings ||  oController._oHeaderFooterOptions.oJamOptions.fGetDiscussSettings)) {
							return null;
						}
						if (!oController._oControlStore.oJamDiscussButton) {
							oController._oControlStore.oJamDiscussButton = new sap.ushell.ui.footerbar.JamDiscussButton({});
						}
						if (oController._oHeaderFooterOptions.oJamOptions.oDiscussSettings) {
						  oController._oControlStore.oJamDiscussButton.setJamData(oController._oHeaderFooterOptions.oJamOptions.oDiscussSettings);
						  this.supportEnablement(oController, oController._oControlStore.oJamDiscussButton,
								oController._oHeaderFooterOptions.oJamOptions.oDiscussSettings);
						}
						return oController._oControlStore.oJamDiscussButton;
					},

					getBookmarkButton : function(oController) {
						if (!oController._oHeaderFooterOptions.oAddBookmarkSettings && !oController.isMainScreen()) {
							return null;
						}
						if (!oController._oControlStore.oBookmarkButton) {
							oController._oControlStore.oBookmarkButton = new sap.ushell.ui.footerbar.AddBookmarkButton({});
						}

						var oAppData = {
							url : document.URL,
							title : oController._oControlStore.oTitle.getText()
						};
						jQuery.extend(oAppData, oController._oHeaderFooterOptions.oAddBookmarkSettings || {});
						oController._oControlStore.oBookmarkButton.setAppData(oAppData);
						this.supportEnablement(oController, oController._oControlStore.oBookmarkButton,
								oController._oHeaderFooterOptions.oAddBookmarkSettings || {});
						return oController._oControlStore.oBookmarkButton;
					},

					supportEnablement : function(oController, oButton, oSettings) {
						oButton.setEnabled(!oSettings.bDisabled);
						if (oSettings.sId) {
							oController._oControlStore.oButtonListHelper.mButtons[oSettings.sId] = oButton;
						}
					},

					getAdditionalShareButtons : function(oController) {
						var aRet = [];
						if (!oController._oControlStore.shareButtons) {
							oController._oControlStore.shareButtons = new sap.ca.scfld.md.app.ButtonListHelper(this.oAppImp, 1);
							oController._oControlStore.oButtonListHelper.addButtonListHelper(oController._oControlStore.shareButtons);
						}
						for ( var i = 0; i < oController._oHeaderFooterOptions.additionalShareButtonList.length; i++) {
							var oBtnMeta = {};
							jQuery.extend(oBtnMeta, oController._oHeaderFooterOptions.additionalShareButtonList[i]);
							delete oBtnMeta.sIcon;
							var oBtn = oController._oControlStore.shareButtons.ensureButton(oBtnMeta, "b");
							aRet.push(oBtn);
						}
						return aRet;
					},

					getFooterRightCount : function(oController, sTSize) {
                        var iLimit;
                        var iCount = this.getActionsCount(oController);
                        
                        switch(sTSize)
                        {
                        case "XL" :
                                iLimit = this.detailHeaderFooterRules.maxBtnCountXL;
                          break;
                        case "L":
                                iLimit = this.detailHeaderFooterRules.maxBtnCountL;
                          break;
                        case "M":
                                iLimit = this.detailHeaderFooterRules.maxBtnCountM;
                          break;
                        case "S":
                                iLimit = this.detailHeaderFooterRules.maxBtnCountS;
                          break;                                                  
                        default:
                                iLimit = this.detailHeaderFooterRules.maxBtnCountXL;
                        }
                        
                        if (iCount <= iLimit + 1) {
                                return iCount;
                        }
                        return iLimit;
					},
					
					getActionsCount : function(oController){
						var iCount = 0;
						if (oController._oHeaderFooterOptions.buttonList) {
							iCount = oController._oHeaderFooterOptions.buttonList.length;
						}
						if (oController._oHeaderFooterOptions.oEditBtn) {
							iCount++;
						}
						if (oController._oHeaderFooterOptions.oPositiveAction) {
							iCount++;
						}
						if (oController._oHeaderFooterOptions.oNegativeAction) {
							iCount++;
						}
						return iCount;
					},

					createSettingsButton : function(oController) {
						if (oController._oControlStore.oSettingsButton) {
							var bRet = false;
						} else {
							var bRet = true;
							oController._oControlStore.oSettingsButton = sap.ushell.services.AppConfiguration.getSettingsControl();
						}
						if (oController._oHeaderFooterOptions.aAdditionalSettingButtons) {
							if (!oController._oControlStore.oSettingsButtonListHelper) {
								oController._oControlStore.oSettingsButtonListHelper = new sap.ca.scfld.md.app.ButtonListHelper(
										this.oAppImp, 0);
								oController._oControlStore.oButtonListHelper
										.addButtonListHelper(oController._oControlStore.oSettingsButtonListHelper);
							}
							var aButtons = [];
							for ( var i = 0; i < oController._oHeaderFooterOptions.aAdditionalSettingButtons.length; i++) {
								var oBtnMeta = {};
								jQuery.extend(oBtnMeta, oController._oHeaderFooterOptions.aAdditionalSettingButtons[i]);
								delete oBtnMeta.sIcon;
								var oButton = oController._oControlStore.oSettingsButtonListHelper.ensureButton(oBtnMeta, "b");
								oButton.setWidth("100%");
								aButtons.push(oButton);
							}
							oController._oControlStore.oSettingsButton.setMenuItems(aButtons);
						}
						return bRet;
					},

					getGenericButtons : function(iFooterRightCount, oController, oButtonListHelper) {
						var aRet = [];
						if (oController._oHeaderFooterOptions.oGroupOptions) {
							aRet.push(this.addGroupButton(iFooterRightCount, oController, oButtonListHelper));
						}
						if (oController._oHeaderFooterOptions.oSortOptions) {
							aRet.push(this.addSortButton(iFooterRightCount, oController, oButtonListHelper));
						}
						if (oController._oHeaderFooterOptions.oFilterOptions) {
							aRet.push(this.addFilterButton(iFooterRightCount, oController, oButtonListHelper));
						}
						return aRet;
					},

					addFilterButton : function(iFooterRightCount, oController, oButtonListHelper) {
						var oBtnMeta = {
							sId : oController._oHeaderFooterOptions.oFilterOptions.sId,
							bDisabled : oController._oHeaderFooterOptions.oFilterOptions.bDisabled,
							sIcon : "sap-icon://filter",
							sBtnTxt : this.oAppImp.UilibI18nModel.getResourceBundle().getText("FILTER")
						};
						if (oController._oHeaderFooterOptions.oFilterOptions.aFilterItems) {
							oBtnMeta.onChange = jQuery.proxy(function(oKey) {
								oController._oHeaderFooterOptions.oFilterOptions.onFilterSelected(oKey);
							}, this);
							oBtnMeta.aItems = oController._oHeaderFooterOptions.oFilterOptions.aFilterItems;
							oBtnMeta.sSelectedItemKey = oController._oHeaderFooterOptions.oFilterOptions.sSelectedItemKey;
							var sType = "s"
						} else {
							oBtnMeta.onBtnPressed = jQuery.proxy(function(oEvent) {
								oController._oHeaderFooterOptions.oFilterOptions.onFilterPressed(oEvent);
							}, this);
							var sType = "b";
						}
						return oButtonListHelper.ensureButton(oBtnMeta, sType, iFooterRightCount);
					},

					addSortButton : function(iFooterRightCount, oController, oButtonListHelper) {
						var oBtnMeta = {
							sId : oController._oHeaderFooterOptions.oSortOptions.sId,
							bDisabled : oController._oHeaderFooterOptions.oSortOptions.bDisabled,
							sIcon : "sap-icon://sort",
							sBtnTxt : this.oAppImp.UilibI18nModel.getResourceBundle().getText("SORT")
						};
						if (oController._oHeaderFooterOptions.oSortOptions.aSortItems) {
							oBtnMeta.onChange = jQuery.proxy(function(oKey) {
								oController._oHeaderFooterOptions.oSortOptions.onSortSelected(oKey);
							}, this);
							oBtnMeta.aItems = oController._oHeaderFooterOptions.oSortOptions.aSortItems;
							oBtnMeta.sSelectedItemKey = oController._oHeaderFooterOptions.oSortOptions.sSelectedItemKey;
							var sType = "s"
						} else {
							oBtnMeta.onBtnPressed = jQuery.proxy(function(oEvent) {
								oController._oHeaderFooterOptions.oSortOptions.onSortPressed(oEvent);
							}, this);
							var sType = "b";
						}
						return oButtonListHelper.ensureButton(oBtnMeta, sType, iFooterRightCount);
					},

					addGroupButton : function(iFooterRightCount, oController, oButtonListHelper) {
						var oBtnMeta = {
							sId : oController._oHeaderFooterOptions.oGroupOptions.sId,
							bDisabled : oController._oHeaderFooterOptions.oGroupOptions.bDisabled,
							sIcon : "sap-icon://group-2",
							sBtnTxt : this.oAppImp.UilibI18nModel.getResourceBundle().getText("GROUP")
						};
						if (oController._oHeaderFooterOptions.oGroupOptions.aGroupItems) {
							oBtnMeta.onChange = jQuery.proxy(function(oKey) {
								oController._oHeaderFooterOptions.oGroupOptions.onGroupSelected(oKey);
							}, this);
							oBtnMeta.aItems = oController._oHeaderFooterOptions.oGroupOptions.aGroupItems;
							oBtnMeta.sSelectedItemKey = oController._oHeaderFooterOptions.oGroupOptions.sSelectedItemKey;
							var sType = "s"
						} else {
							oBtnMeta.onBtnPressed = jQuery.proxy(function(oEvent) {
								oController._oHeaderFooterOptions.oGroupOptions.onGroupPressed(oEvent);
							}, this);
							var sType = "b";
						}
						return oButtonListHelper.ensureButton(oBtnMeta, sType, iFooterRightCount);
					},

					ensureHeader : function(oController, oPage, bGenericBackButton) {
						if (!oController._oControlStore.oHeaderBar) {
							oController._oControlStore.oHeaderBar = new sap.m.Bar();
							oController._oControlStore.oTitle = new sap.m.Label();
							oController._oControlStore.oHeaderBar.addContentMiddle(oController._oControlStore.oTitle);
							oPage.setCustomHeader(oController._oControlStore.oHeaderBar);
						}
						this.setBackButton(oController, oController._oControlStore.oHeaderBar, bGenericBackButton);
					},
					
					setBackButton : function(oController, oBar, bGenericBackButton){	
						if (bGenericBackButton && oController._oHeaderFooterOptions.onBack == undefined){
							if (window.history.length == 0){
								oController._oControlStore.fBack = null;
							} else {
								oController._oControlStore.fBack = function(){
									window.history.back(1);
								};
							}
						} else {
							oController._oControlStore.fBack = oController._oHeaderFooterOptions.onBack;
						}
						if (oController._oControlStore.oBackButton) {
							oController._oControlStore.oBackButton.setVisible(!!oController._oControlStore.fBack);
						} else if (oController._oControlStore.fBack) {
							oController._oControlStore.oBackButton = new sap.m.Button();
							oController._oControlStore.oBackButton.setIcon("sap-icon://nav-back");
							oController._oControlStore.oBackButton.attachPress(function(oEvent) {
								oController._oControlStore.fBack(oEvent);
							});
							oBar.addContentLeft(oController._oControlStore.oBackButton)
						}
					},

					getGenericCount : function(oController) {
						var iRet = 0
						if (oController._oHeaderFooterOptions.oSortOptions) {
							iRet++;
						}
						if (oController._oHeaderFooterOptions.oFilterOptions) {
							iRet++;
						}
						if (oController._oHeaderFooterOptions.oGroupOptions) {
							iRet++;
						}
						return iRet;
					}

				});

}; // end of sap/ca/scfld/md/app/CommonHeaderFooterHelper.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.app.ConnectionManager') ) {
jQuery.sap.declare("sap.ca.scfld.md.app.ConnectionManager");
jQuery.sap.require('sap.ui.core.util.MockServer'); // unlisted dependency retained

jQuery.sap.require('sap.ca.ui.message.message'); // unlisted dependency retained

jQuery.sap.require('sap.ca.ui.utils.busydialog'); // unlisted dependency retained


sap.ui.base.ManagedObject
		.extend(
				"sap.ca.scfld.md.app.ConnectionManager",
				{

					metadata : {
						properties : {
							identity : "string",
							configuration : "object",
							defaultConfiguration : "object",
							component : "object"
						}
					},

					modelList : {}, // Map containing all the models
					mockServerList : {}, // Map containing all the models

					/**
					 * Initialize all the models as defined in the configuration service list. The models should define : - their
					 * url - the name of the model that they will create - a isDefault property that will set the model as the
					 * undefined model (to support getModel()) - a mockedDataSource to define if mock data are available (and to
					 * switch to MockServer class in this case)
					 */
					initModels : function() {
						this.iRequestCount = 0;
						// Init all the ODataModel based on the configuration
						var serviceList = this.getConfiguration().getServiceList();
						var excludedParameters = this.getConfiguration().getExcludedQueryStringParameters();
						if (excludedParameters == null) {
							excludedParameters = new Array();
						}
						var isMocked = this.getConfiguration().isMock();
						var that = this;
						var sapServer = jQuery.sap.getUriParameters().get("sap-server");
						var sapHost = jQuery.sap.getUriParameters().get("sap-host");
						var sapHostHttp = jQuery.sap.getUriParameters().get("sap-host-http");
						var sapClient = jQuery.sap.getUriParameters().get("sap-client");

						var oComponent = that.getComponent();
						if (!sap.ui.getCore().getConfiguration().getDisableCustomizing() && oComponent && oComponent.getMetadata()) {

							var oConfig = oComponent.getMetadata().getConfig();
							var serviceListExt = oConfig["sap.ca.serviceConfigs"];

							var fMergeConfigs = function(aServiceList, aExtConfig) {
								var oServiceList, oExtConfig;
								for ( var i = 0; i < aServiceList.length; i++) {
									oServiceList = aServiceList[i];
									for ( var j = 0; j < aExtConfig.length; j++) {
										oExtConfig = aExtConfig[j];
										if (oServiceList.name == oExtConfig.name) {
											for ( var key in oExtConfig) {
												oServiceList[key] = oExtConfig[key];
											}
											aExtConfig.splice(j, 1);
											//array was sqashed - adapt the index in order to 
											//check the 'new entry' that moved its position
											j--;
										}
									};
								};
								aServiceList = aServiceList.concat(aExtConfig);
								return aServiceList;
							}
							if (serviceListExt != undefined && serviceListExt.length > 0) {
								var modServiceList = fMergeConfigs(serviceList, serviceListExt);
								serviceList = modServiceList;
							}
						}

						if (serviceList != null) {
							jQuery
									.each(
											serviceList,
											function(index, service) {
												var sUrlUri = URI(service.serviceUrl);

												if (sapServer != null && (jQuery.inArray("sap-server", excludedParameters) == -1)) {
													sUrlUri.addSearch("sap-server", sapServer);
												} else if (sapHost != null && (jQuery.inArray("sap-host", excludedParameters) == -1)) {
													sUrlUri.addSearch("sap-host", sapHost);
												} else if (sapHostHttp != null && (jQuery.inArray("sap-host-http", excludedParameters) == -1)) {
													sUrlUri.addSearch("sap-host-http", sapHostHttp);
												}
												if (sapClient != null && (jQuery.inArray("sap-client", excludedParameters) == -1)) {
													sUrlUri.addSearch("sap-client", sapClient);
												}
												var sUrl = sUrlUri.toString();
												if (isMocked) {
													var sMockServerUrl = sUrl;
													if (!jQuery.sap.endsWith(sMockServerUrl, "/")) {
														sMockServerUrl += "/";
													}
													var oMockServer = new sap.ui.core.util.MockServer({
														rootUri : sMockServerUrl
													});
													if (service.mockedDataSource) {
														oMockServer.simulate(service.mockedDataSource, service.mockedDataSource.replace(new RegExp(
																"[^/]*$"), ""));
														// the replace instruction strips the filename, returning only the path with trailing slash
														// eg. model/metadata.xml --> model/
													} else {
														oMockServer.simulate(sUrl + "/$metadata");
													}
													oMockServer.start();
													that.mockServerList[service.name] = oMockServer;
													if (service.isDefault) {
														that.mockServerList[undefined] = oMockServer;
													}
												}

												var oModel = new sap.ui.model.odata.ODataModel(sUrl, true);
												// To comply with security guidelines, batch mode is used except if :
												// - service configuration explicitly contains useBatch:false
												// - service is a mock service
												if ((service.useBatch) && !isMocked) {
													oModel.setUseBatch(true);
												}

												if (service.countSupported) {
													oModel.setCountSupported(true);
												}	else{
													oModel.setCountSupported(false);
												}
												// test whether the call went through
												if (!oModel.getServiceMetadata()) {
													var oII18NModel = that.getProperty("configuration").oApplicationFacade.oApplicationImplementation.UilibI18nModel
															.getResourceBundle();
													var oSettings = {
														type : sap.ca.ui.message.Type.ERROR,
														message : oII18NModel.getText("ERROR_MSG_NO_METADATA", [service.name]),
														details : oII18NModel.getText("ERROR_DETAIL_NO_METADATA", [service.serviceUrl])
													};
													sap.ca.ui.message.showMessageBox(oSettings /* , fnClose */);
													return;
												}
												if (service.fRequestFailed) {
													oModel.attachRequestFailed(null, service.fRequestFailed);
												} else {
													oModel.attachRequestFailed(null, jQuery.proxy(that.handleRequestFailed, that));
												}
												// some applications requested the possibility to avoid the busy indicator
												if (service.noBusyIndicator == true) {
													// attach only default logic
													oModel.attachRequestSent(null, jQuery.proxy(that.handleRequestSentInner, that));
													oModel.attachRequestCompleted(null, jQuery.proxy(that.handleRequestCompletedInner, that));
												} else {
													// attach default logic + busy Indicator
													oModel.attachRequestSent(null, jQuery.proxy(that.handleRequestSent, that));
													oModel.attachRequestCompleted(null, jQuery.proxy(that.handleRequestCompleted, that));
												}

												if (service.isDefault) {
													that.modelList[undefined] = oModel;
													that.setDefaultConfiguration(service);
												}	else {
													that.modelList[service.name] = oModel;
												}
											});
						}
					},

					setIdentity : function(sIdentity) {
						var oldIdentity = this.getIdentity();
						if (oldIdentity != sIdentity) {
							this.setProperty("identity", sIdentity);
						}
					},

					/**
					 * Retrieve a single model based on its name
					 * 
					 * @param sName
					 * @returns {*}
					 */
					getModel : function(sName) {
						return this.modelList[sName];
					},

					/**
					 * Method to be called each time a request is sent on the ODataModel
					 * 
					 * @param oEvent
					 */
					handleRequestSent : function(oEvent) {
						sap.ca.ui.utils.busydialog.requireBusyDialog();
						this.handleRequestSentInner(oEvent);
					},

					handleRequestSentInner : function(oEvent) {
						this.iRequestCount++;
						jQuery.sap.log.info("Connection Manager", "Request sent");
					},

					/**
					 * Method to be called each time a request fails on the ODataModel
					 * 
					 * @param oEvent
					 */
					handleRequestFailed : function(oEvent) {
						jQuery.sap.log.error("Connection Manager", "Failed to load data");
						var oSettings = {
							type : sap.ca.ui.message.Type.ERROR,
							message : oEvent.getParameter("message"),
							details : oEvent.getParameter("responseText")
						};
						sap.ca.ui.message.showMessageBox(oSettings /* , fnClose */);
					},

					/**
					 * Method to be called each time a request is completed on the ODataModel
					 * 
					 * @param oEvent
					 */
					handleRequestCompleted : function(oEvent) {
						sap.ca.ui.utils.busydialog.releaseBusyDialog();
						this.handleRequestCompletedInner(oEvent);
					},

					handleRequestCompletedInner : function(oEvent) {
						if (oEvent.getParameter("success")) {
							jQuery.sap.log.info("Connection Manager", "Request succesfully completed");
						} else {
							jQuery.sap.log.info("Connection Manager", "Request completed with errors", oEvent.getParameter("message"));
						}
					}
				});

// factory method may be more flexible in future
sap.ca.scfld.md.app.ConnectionManager.getNewInstance = function(sIdentity, oConfiguration, oDefaultConfiguration,
		oComponent) {
	var oConnManager = new sap.ca.scfld.md.app.ConnectionManager({
		identity : sIdentity,
		configuration : oConfiguration,
		defaultConfiguration : oDefaultConfiguration,
		component : oComponent
	});
	oConnManager.initModels();
	return oConnManager;
};

}; // end of sap/ca/scfld/md/app/ConnectionManager.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.app.DetailHeaderFooterHelper') ) {
jQuery.sap.declare("sap.ca.scfld.md.app.DetailHeaderFooterHelper");


sap.ui.base.Object
		.extend(
				"sap.ca.scfld.md.app.DetailHeaderFooterHelper",
				{

					constructor : function(oApplicationImplementation) {
						this.oAppImp = oApplicationImplementation;
						this.oCommonHeaderFooterHelper = new sap.ca.scfld.md.app.CommonHeaderFooterHelper(oApplicationImplementation, this.detailHeaderFooterRules);
					},

					detailHeaderFooterRules : {
                        maxBtnCountXL : 4,
                        maxBtnCountL  : 3,
                        maxBtnCountM  : 2,
                        maxBtnCountS  : 1
					},

					defineDetailHeaderFooter : function(oController) {
						var oOptions = oController.getHeaderFooterOptions();
						this.setHeaderFooter(oController, oOptions);
					},						
						
					setHeaderFooter : function(oController, oOptions){
						if (!oOptions){
							return;
						}						
						// ToDo Header
						var oPage = this.oCommonHeaderFooterHelper.startBuild(oController, oOptions);
						// ToDo: define detail header -> back button + up down buttons
						// this.defineDetailHeader(oController, oPage, this.detailHeaderFooterRules);
// important to run header before footer, as the addBookmark button relies on the title
						this.defineHeader(oController, oPage);
						this.defineFooter(oController, oPage);
						this.oCommonHeaderFooterHelper.endBuild(oController);
					},
//
					defineFooter : function(oController, oPage) {
                        var sTSize;
                        if (oController.oApplicationImplementation.bIsPhone && jQuery.device.is.portrait )
                                { sTSize = "S"; }
                        else if (oController.oApplicationImplementation.bIsPhone && jQuery.device.is.landscape )
                                { sTSize = "M"; }
                        else 
                                { sTSize = "XL"; }						
						var iFooterRightCount = this.oCommonHeaderFooterHelper.getFooterRightCount(oController, sTSize);
						var bHasButton = this.oCommonHeaderFooterHelper.defineFooterRight(oController, oPage, iFooterRightCount, false, true);
						oPage.setShowFooter(bHasButton || oController.isMainScreen());						
					},
					
					defineHeader : function(oController, oPage){
						this.oCommonHeaderFooterHelper.ensureHeader(oController, oPage, jQuery.device.is.phone);
						if (oController._oHeaderFooterOptions.oUpDownOptions){
							this.setUpDownButtons(oController, oController._oHeaderFooterOptions.oUpDownOptions.iPosition, oController._oHeaderFooterOptions.oUpDownOptions.iCount);
							var aPars = this.getPositionPars(oController);
							if (jQuery.device.is.phone){
                if (oController._oHeaderFooterOptions.oUpDownOptions.sI18NPhoneTitle){
  								var oBundle = this.oAppImp.getResourceBundle();
  								var sKey = oController._oHeaderFooterOptions.oUpDownOptions.sI18NPhoneTitle;             	
                }	else {
  								var oBundle = this.oAppImp.getUiLibResourceBundle();
  								var sKey = "ITEM_TITLE_PHONE";                  	
                }							
							} else {
                if (oController._oHeaderFooterOptions.oUpDownOptions.sI18NDetailTitle){
  								var oBundle = this.oAppImp.getResourceBundle();
  								var sKey = oController._oHeaderFooterOptions.oUpDownOptions.sI18NDetailTitle;             	
                }	else {
  								var oBundle = this.oAppImp.getUiLibResourceBundle();
  								var sKey = "ITEM_TITLE";                  	
                }															
							}
              var sTitle = oBundle.getText(sKey, aPars);														
						} else {
							this.setUpDownButtons(oController, 0, 0);
							if (oController._oHeaderFooterOptions.sI18NDetailTitle){
								var oBundle = this.oAppImp.getResourceBundle();
								var sTitle = oBundle.getText(oController._oHeaderFooterOptions.sI18NDetailTitle);
							} else if (oController._oHeaderFooterOptions.sDetailTitle){
								var sTitle = oController._oHeaderFooterOptions.sDetailTitle;
							} else{
								var oBundle = this.oAppImp.getResourceBundle();
								var sTitle = oBundle.getText("DETAIL_TITLE");								
							}
						}
						oController._oControlStore.oTitle.setText(sTitle);
					},
					
					setUpDownButtons : function(oController, iPos, iCount){
						if (iCount <=1){
							if (oController._oControlStore.oUpButton){
								oController._oControlStore.oUpButton.setVisible(false);
								oController._oControlStore.oDownButton.setVisible(false);
							}
						} else {
							if (!oController._oControlStore.oUpButton){
								var fMoveUpDown = function(delta){
									oController._oHeaderFooterOptions.oUpDownOptions.fSetPosition(oController._oHeaderFooterOptions.oUpDownOptions.iPosition + delta); 
								};								
								oController._oControlStore.oUpButton = new sap.m.Button();
								oController._oControlStore.oUpButton.setIcon("sap-icon://down");
								oController._oControlStore.oUpButton.attachPress(function(){
									fMoveUpDown(1);
								});
								oController._oControlStore.oHeaderBar.addContentRight(oController._oControlStore.oUpButton);
								oController._oControlStore.oDownButton = new sap.m.Button();
								oController._oControlStore.oDownButton.setIcon("sap-icon://up");
								oController._oControlStore.oDownButton.attachPress(function(){
									fMoveUpDown(-1);
								});								
								oController._oControlStore.oHeaderBar.addContentRight(oController._oControlStore.oDownButton);								
							}
							oController._oControlStore.oUpButton.setVisible(true);
							oController._oControlStore.oDownButton.setVisible(true);							
							oController._oControlStore.oUpButton.setEnabled(iPos < iCount - 1);
							oController._oControlStore.oDownButton.setEnabled(iPos > 0);															
						}
					},
					
					getPositionPars : function(oController){
						if (oController._oHeaderFooterOptions){
						  var aRet = [oController._oHeaderFooterOptions.oUpDownOptions.iPosition + 1, oController._oHeaderFooterOptions.oUpDownOptions.iCount];
						  if (oController._oHeaderFooterOptions.oUpDownOptions.oParent){
						  	aRet = aRet.concat(this.getPositionPars(oController._oHeaderFooterOptions.oUpDownOptions.oParent));
						  }
						  return aRet;
						}
						return [];
					}
				});
}; // end of sap/ca/scfld/md/app/DetailHeaderFooterHelper.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.app.FullScreenHeaderFooterHelper') ) {
jQuery.sap.declare("sap.ca.scfld.md.app.FullScreenHeaderFooterHelper");
jQuery.sap.require('sap.ushell.ui.footerbar.JamShareButton'); // unlisted dependency retained

jQuery.sap.require('sap.ushell.ui.footerbar.JamDiscussButton'); // unlisted dependency retained

jQuery.sap.require('sap.ushell.ui.footerbar.AddBookmarkButton'); // unlisted dependency retained




sap.ui.base.Object
		.extend(
				"sap.ca.scfld.md.app.FullScreenHeaderFooterHelper",
				{

					constructor : function(oApplicationImplementation) {
						this.oAppImp = oApplicationImplementation;
						this.oCommonHeaderFooterHelper = new sap.ca.scfld.md.app.CommonHeaderFooterHelper(
								oApplicationImplementation, this.detailHeaderFooterRules);
					},

					detailHeaderFooterRules : {
                        maxBtnCountXL : 4,
                        maxBtnCountL  : 3,
                        maxBtnCountM  : 2,
                        maxBtnCountS  : 1
					},

					defineHeaderFooter : function(oController) {
						var oOptions = oController.getHeaderFooterOptions();
						this.setHeaderFooter(oController, oOptions);
					},

					setHeaderFooter : function(oController, oOptions) {
						if (!oOptions) {
							return;
						}
						var oPage = this.oCommonHeaderFooterHelper.startBuild(oController, oOptions, {
							iSettingsPosition : 0
						});
						this.oCommonHeaderFooterHelper.createSettingsButton(oController);
						var bHasFooterButtons = this.needsFooter(oController);
					// important to run header before footer, as the addBookmark button relies on the title
						this.defineHeader(oController, oPage, bHasFooterButtons);
						this.defineFooter(oController, oPage, bHasFooterButtons);
						this.oCommonHeaderFooterHelper.endBuild(oController);
					},

					defineFooter : function(oController, oPage, bHasFooterButtons) {
						if (bHasFooterButtons) {
							if (oController._oControlStore.iSettingsPosition > -1) {
								if (oController._oControlStore.iSettingsPosition == 1) {
									oController._oControlStore.oHeaderBar.removeContentRight(oController._oControlStore.oSettingsButton);
								}
								oController._oControlStore.oButtonListHelper.oBar.insertContentLeft(
										oController._oControlStore.oSettingsButton, 0);
								oController._oControlStore.iSettingsPosition = -1;
							}							
							var iFooterRightCount = this.getFooterRightCount(oController);
							this.oCommonHeaderFooterHelper.defineFooterRight(oController, oPage, iFooterRightCount,
									this.oAppImp.bIsPhone, false);
							if (!this.oAppImp.bIsPhone) {
								if (!oController._oControlStore.oLeftButtonList) {
									oController._oControlStore.oLeftButtonList = new sap.ca.scfld.md.app.ButtonListHelper(this.oAppImp, 25);
									oController._oControlStore.oLeftButtonList.oBar = oController._oControlStore.oButtonListHelper.oBar;
									oController._oControlStore.oButtonListHelper
											.addButtonListHelper(oController._oControlStore.oLeftButtonList);
								}
								this.oCommonHeaderFooterHelper.getGenericButtons(3, oController,
										oController._oControlStore.oLeftButtonList);
							}
						}
					},

					defineHeader : function(oController, oPage, bHasFooterButtons) {
						this.oCommonHeaderFooterHelper.ensureHeader(oController, oPage, true);
						if (oController._oHeaderFooterOptions.sI18NFullscreenTitle){
							var oBundle = this.oAppImp.getResourceBundle();
							var sTitle = oBundle.getText(oController._oHeaderFooterOptions.sI18NFullscreenTitle);
						} else if (oController._oHeaderFooterOptions.sFullscreenTitle){
							var sTitle = oController._oHeaderFooterOptions.sFullscreenTitle;
						} else{
							var oBundle = this.oAppImp.getResourceBundle();
							var sTitle = oBundle.getText("FULLSCREEN_TITLE");								
						}
						oController._oControlStore.oTitle.setText(sTitle);
						if (!bHasFooterButtons){
							if (oController._oControlStore.iSettingsPosition < 1) {
								if (oController._oControlStore.iSettingsPosition == -1) {
									oController._oControlStore.oButtonListHelper.oBar.removeContentLeft(oController._oControlStore.oSettingsButton);
								}
								oController._oControlStore.oHeaderBar.addContentRight(oController._oControlStore.oSettingsButton);
								oController._oControlStore.iSettingsPosition = 1;
							}
						} 
						if (oController._oControlStore.oFacetFilterButton){
							oController._oControlStore.oFacetFilterButton.setVisible(!!oController._oHeaderFooterOptions.onFacetFilter);
						} else if (oController._oHeaderFooterOptions.onFacetFilter){
							oController._oControlStore.oFacetFilterButton = new sap.m.Button();
							oController._oControlStore.oFacetFilterButton.setIcon("sap-icon://filter");
							oController._oControlStore.oFacetFilterButton.attachPress(function(oEvent){
								oController._oHeaderFooterOptions.onFacetFilter(oEvent);
							});
							oController._oControlStore.oHeaderBar.addContentRight(oController._oControlStore.oFacetFilterButton);									
						}
					},

					needsFooter : function(oController) {
						return oController._oHeaderFooterOptions.onFacetFilter || 
						  this.oCommonHeaderFooterHelper.getGenericCount(oController) > 0 || 
						  this.oCommonHeaderFooterHelper.getActionsCount(oController) > 0 ||
						  this.oCommonHeaderFooterHelper.hasShareButtons(oController);
					},
					
					getFooterRightCount : function(oController){
                        var sTSize;
                        if (oController.oApplicationImplementation.bIsPhone && jQuery.device.is.portrait )
                                { sTSize = "S"; }
                        else if (oController.oApplicationImplementation.bIsPhone && jQuery.device.is.landscape )
                                { sTSize = "M"; }
                        else 
                                { sTSize = "XL"; }						
						
						if (this.oAppImp.bIsPhone){
							var iCount = this.oCommonHeaderFooterHelper.getActionsCount(oController);
							if (iCount < 2){
								return 4;
							}
							if (iCount == 2 && this.oCommonHeaderFooterHelper.getGenericCount(oController) == 0){
								return 2;
							}
							//return 1;
						}
						return this.oCommonHeaderFooterHelper.getFooterRightCount(oController, sTSize);
					}
				});
}; // end of sap/ca/scfld/md/app/FullScreenHeaderFooterHelper.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.app.MasterHeaderFooterHelper') ) {
jQuery.sap.declare("sap.ca.scfld.md.app.MasterHeaderFooterHelper");

sap.ui.base.Object.extend("sap.ca.scfld.md.app.MasterHeaderFooterHelper", {

	constructor : function(oApplicationImplementation) {
		this.oApplicationImplementation = oApplicationImplementation;
		this.oCommonHeaderFooterHelper = new sap.ca.scfld.md.app.CommonHeaderFooterHelper(oApplicationImplementation, {});
	},

	// set master header bar and footer bar
	defineMasterHeaderFooter : function(oController) {

		this.defineMasterHeaderFooterInner(oController);
	},

	defineMasterHeaderFooterInner : function(oController) {

		// get content information from app
		var oOptions = oController.getHeaderFooterOptions();
		if (!oOptions) {
			return;
		}
		var oPage = this.oCommonHeaderFooterHelper.startBuild(oController, oOptions, { bEditState : false });
		this.defineHeader(oController, oPage);
		this.defineFooter(oController, oPage);
		this.oCommonHeaderFooterHelper.endBuild(oController);
	},

	// function defining the master header
	defineHeader : function(oController, oPage) {
		var oCustHeader = oPage.getCustomHeader();
		if (!oCustHeader) {
			oCustHeader = new sap.m.Bar();
			oPage.setCustomHeader(oCustHeader);
		}
		this.defineMasterSubHeader(oController, oPage);
		var iCount = -1;
		if (!oController.isBackendSearch()) {
			if (oController._oControlStore.oMasterSearchField) {
				var sFilterPattern = oController._oControlStore.oMasterSearchField.getValue();
				if (sFilterPattern) {
					iCount = oController.applySearchPattern(sFilterPattern);
				}
			}
		}
		if (iCount < 0) {
			var oList = oController.getList();
			var aItems = oList.getItems();
			iCount = 0;
			for (var i = 0; i < aItems.length; i++){
				if (!(aItems[i] instanceof sap.m.GroupHeaderListItem)){
					iCount++;
				}
			}
		}
		this.defineMasterTitle(oController, oCustHeader, iCount);
		this.oCommonHeaderFooterHelper.setBackButton(oController, oCustHeader, true);
		this.defineEditButton(oController, oCustHeader);
	},

	// function defining the master footer
	defineFooter : function(oController, oPage) {
		this.defineSettingsButton(oController);
		this.defineFooterRight(oController);
	},

	// define subheader of master list
	defineMasterSubHeader : function(oController, oPage) {
		if (oController._oControlStore.oMasterSearchField || oController._oControlStore.oMasterPullToRefresh) {
			return; // subheader has already been set
		}
		var oSubHeader = new sap.m.Bar();
		oPage.setSubHeader(oSubHeader);
		var bIsTouch = sap.ui.Device.support.touch;
		this.createMasterSearchField(oController, oSubHeader, bIsTouch);
		if (bIsTouch) {
			this.createMasterPullToRefresh(oController, oPage);
		}
	},

	createMasterSearchField : function(oController, oSubHeader, bIsTouch) {
		oController._oControlStore.oMasterSearchField = new sap.m.SearchField();
		oController._oControlStore.oMasterSearchField.setShowRefreshButton(!bIsTouch);
		//init search text
		oController._oControlStore.sMasterSearchText = null;
		// currently required for refresh and search
		oController._oControlStore.oMasterSearchField.attachSearch(jQuery.proxy(function(oEvent) {
			this.handleMasterSearch(oController, oEvent);
		}, this));
		if (oController.isLiveSearch()) {
			oController._oControlStore.oMasterSearchField.attachLiveChange(jQuery.proxy(oController._applyClientSideSearch,
					oController));
		}
		if (oController._oHeaderFooterOptions.sI18NSearchFieldPlaceholder) {
			var oBundle = this.oApplicationImplementation.AppI18nModel.getResourceBundle();
			var sPlaceholder = oBundle.getText(oController._oHeaderFooterOptions.sI18NSearchFieldPlaceholder);
		} else {
			var oBundle = this.oApplicationImplementation.UilibI18nModel.getResourceBundle();
			var sPlaceholder = oBundle.getText("MASTER_PLACEHOLDER_SEARCHFIELD");
		}
		oController._oControlStore.oMasterSearchField.setPlaceholder(sPlaceholder);
		oSubHeader.addContentMiddle(oController._oControlStore.oMasterSearchField);
	},

	createMasterPullToRefresh : function(oController, oPage) {
		oController._oControlStore.oMasterPullToRefresh = new sap.m.PullToRefresh();
		oController._oControlStore.oMasterPullToRefresh.attachRefresh(jQuery.proxy(function() {
			this.handleMasterPullToRefresh(oController);
		}, this));
		oPage.insertContent(oController._oControlStore.oMasterPullToRefresh, 0);
	},

	handleMasterSearch : function(oController, oEvent) {
		var bBackendSearch = oController.isBackendSearch();
		var bIsRefresh = oEvent.getParameter("refreshButtonPressed");
		if (bIsRefresh || bBackendSearch) {
			this.refreshList(oController, bIsRefresh);
		}
		if (!bBackendSearch && !oController.isLiveSearch()) {
			oController._applyClientSideSearch();
		}
		// todo: handle paging case
	},

	handleMasterPullToRefresh : function(oController) {
		this.refreshList(oController, true);
	},

	refreshList : function(oController, bIsRefresh) {
		//restore old search pattern if we are in refresh mode
		var bIsBackendSearch = oController.isBackendSearch();
		bIsRefresh = bIsRefresh && oController._oControlStore.sMasterSearchText != null;
		if (bIsRefresh){
			//in this case not confirmed search text will be replaced by last entered
			var sTempSearchField = oController._oControlStore.sMasterSearchText; 
			oController._oControlStore.oMasterSearchField.setValue(sTempSearchField);
			
		}else{
			var sTempSearchField = oController._oControlStore.oMasterSearchField.getValue();
		}
		var oList = oController.getList();
		//collect selected list items
		this.oApplicationImplementation.aKeyValues = null;
		if (this.oApplicationImplementation.aMasterKeys) {
			var aItems = oList.getItems();
			for ( var i = 0; i < aItems.length; i++) {
				var oListItem = aItems[i];
				if (oListItem.getSelected()) {
					this.oApplicationImplementation.aKeyValues = [];
					var oItemBinding = oListItem.getBindingContext(this.sModelName);
					for ( var j = 0; j < this.oApplicationImplementation.aMasterKeys.length; j++) {
						this.oApplicationImplementation.aKeyValues.push(oItemBinding
								.getProperty(this.oApplicationImplementation.aMasterKeys[j]));
					}
					i = aItems.length;
				}
			}
		}
		var oBinding = oController._oMasterListBinding;
		var bBackendCalled = !oBinding;
		if (oBinding){
			oBinding.attachChange(oController._onMasterListLoaded, oController);
			var fReceivedHandler = jQuery.proxy(function() {
				if (oController._oControlStore.oMasterPullToRefresh) {
					oController._oControlStore.oMasterPullToRefresh.hide();
				}
				if (bIsBackendSearch){
					oController._oControlStore.sMasterSearchText = sTempSearchField;
					oController._oControlStore.oMasterSearchField.setValue(oController._oControlStore.sMasterSearchText);
				}
				oBinding.detachDataReceived(fReceivedHandler);
			}, this);

			//will be called synchronously
			var fRequestedHandler = jQuery.proxy(function() {
				bBackendCalled = true;
				oBinding.detachDataRequested(fRequestedHandler);
			}, this);
	
			oBinding.attachDataRequested(fRequestedHandler);
			oBinding.attachDataReceived(fReceivedHandler);
		}
		if (bIsBackendSearch && !bIsRefresh) {
			//we always give the application the hook independent from oBinding state 
			var bSearchRejected = oController.applyBackendSearchPattern(sTempSearchField, oBinding);
			if (bSearchRejected) {
				oBinding.detachDataRequested(fRequestedHandler);
				oBinding.detachDataReceived(fReceivedHandler);
				return; //Application said no refresh
			}
			//check if App has replaced the binding
			if (oBinding && oBinding != oController._oMasterListBinding){
				oBinding.detachDataRequested(fRequestedHandler);
				oBinding.detachDataReceived(fReceivedHandler);
				oController._oControlStore.sMasterSearchText = sTempSearchField;
				// backend call should have already been triggered by replacing the binding
				return;
			}
		}

		//if application does not bind because of invalid search pattern (e.g. too little characters)
		if (!bBackendCalled && oController._oMasterListBinding ) {
			oController._oMasterListBinding.refresh();
		}
	},

	defineMasterTitle : function(oController, oCustHeader, iCount) {
		if (!oController._oHeaderFooterOptions.sI18NMasterTitle) {
			return;
		}
		if (!oController._oControlStore.oMasterTitle) {
			oController._oControlStore.oMasterTitle = new sap.m.Text();
			oCustHeader.addContentMiddle(oController._oControlStore.oMasterTitle);
		}
		this.setMasterTitle(oController, iCount);
	},

	setMasterTitle : function(oController, iCount) {
		if (!oController._oControlStore.oMasterTitle) {
			return;
		}
		var oBundle = this.oApplicationImplementation.AppI18nModel.getResourceBundle();
		var sTitle = oBundle.getText(oController._oHeaderFooterOptions.sI18NMasterTitle, [iCount]);
		oController._oControlStore.oMasterTitle.setText(sTitle);
	},

	// handle standard edit button
	defineEditButton : function(oController, oCustHeader) {
		if (oController._oHeaderFooterOptions.onEditPress || oController._oHeaderFooterOptions.oEditBtn) {
			if (!oController._oControlStore.oEditBtn) {
				oController._oControlStore.oEditBtn = new sap.m.Button();
				oCustHeader.addContentRight(oController._oControlStore.oEditBtn);
				oController._oControlStore.oEditBtn.attachPress(jQuery.proxy(function() {
					if (oController._oControlStore.bEditState) {
						oController._oControlStore.oEditBtn.setIcon("sap-icon://multi-select");
					} else {
						oController._oControlStore.oEditBtn.setIcon("sap-icon://sys-cancel");
					}
					oController._oControlStore.bEditState = !oController._oControlStore.bEditState;
					oController._oControlStore.oSettingsButton.setVisible(!oController._oControlStore.bEditState);
					(oController._oHeaderFooterOptions.onEditPress || oController._oHeaderFooterOptions.oEditBtn.onBtnPressed)(oController._oControlStore.bEditState);
				}, this));
			}
			if (oController._oControlStore.bEditState) {
				oController._oControlStore.oEditBtn.setIcon("sap-icon://sys-cancel");
			} else {
				oController._oControlStore.oEditBtn.setIcon("sap-icon://multi-select");
			}
			oController._oControlStore.oEditBtn.setVisible(true);
			oController._oControlStore.oEditBtn.setEnabled(!!(oController._oHeaderFooterOptions.onEditPress || !oController._oHeaderFooterOptions.oEditBtn.bDisabled));
      if (oController._oHeaderFooterOptions.oEditBtn && oController._oHeaderFooterOptions.oEditBtn.sId){
      	oController._oControlStore.oButtonListHelper.mButtons[oController._oHeaderFooterOptions.oEditBtn.sId] = oController._oControlStore.oEditBtn;
      }
		} else if (oController._oControlStore.oEditBtn) {
			oController._oControlStore.oEditBtn.setVisible(false);
		}
	},

	defineSettingsButton : function(oController) {
		var bIsCreated = this.oCommonHeaderFooterHelper.createSettingsButton(oController);
		if (bIsCreated) {
			oController._oControlStore.oButtonListHelper.oBar.addContentLeft(oController._oControlStore.oSettingsButton);
		}
		oController._oControlStore.oSettingsButton.setVisible(!oController._oControlStore.bEditState);
	},

	defineFooterRight : function(oController) {
		var iFooterRightCount = this.getFooterRightCount(oController);
		this.oCommonHeaderFooterHelper.getGenericButtons(iFooterRightCount, oController,
				oController._oControlStore.oButtonListHelper);		
		if (oController._oHeaderFooterOptions.buttonList) {
			for ( var i = 0; i < oController._oHeaderFooterOptions.buttonList.length; i++) {
				var oBtnMeta = {};
				jQuery.extend(oBtnMeta, oController._oHeaderFooterOptions.buttonList[i]);
				delete oBtnMeta.sIcon;
				oController._oControlStore.oButtonListHelper.ensureButton(oBtnMeta, "b", iFooterRightCount);
			}
		}
		if (oController._oHeaderFooterOptions.onAddPress || oController._oHeaderFooterOptions.oAddOptions) {
			this.addAddButton(oController);
		}
	},

	getFooterRightCount : function(oController) {
        var iGenCount = this.oCommonHeaderFooterHelper
        .getGenericCount(oController);
        if (iGenCount > 0 && oController.oApplicationImplementation.bIsPhone
        		&& jQuery.device.is.landscape)
        	{
        	return iGenCount + 1
        	}
        else if (iGenCount > 0) {
        	return iGenCount;
        } 
        else
        {
        	return 1;
        }
	},

	addAddButton : function(oController) {
		if (oController._oHeaderFooterOptions.onAddPress) {
			var oBtnMeta = {
				onBtnPressed : oController._oHeaderFooterOptions.onAddPress
			}
		} else {
			var oBtnMeta = {};
			jQuery.extend(oBtnMeta, oController._oHeaderFooterOptions.oAddOptions);
			delete oBtnMeta.sBtnText;
			delete oBtnMeta.sI18nBtnTxt;
		}
		oBtnMeta.sIcon = "sap-icon://add";
		oController._oControlStore.oButtonListHelper.ensureButton(oBtnMeta, "b");
	}

});

}; // end of sap/ca/scfld/md/app/MasterHeaderFooterHelper.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.controller.BaseDetailController') ) {
  jQuery.sap.declare('sap.ca.scfld.md.controller.BaseDetailController');
jQuery.sap.require('sap.ui.core.mvc.Controller'); // unlisted dependency retained

//
sap.ui.core.mvc.Controller.extend("sap.ca.scfld.md.controller.BaseDetailController", {

	constructor : function() {
		this.oApplicationImplementation = sap.ca.scfld.md.app.Application.getImpl();
		// Make sure that our init-coding is executed even if the App overrides onInit() and does not call
		// onInit() of the super class.
		var fMyOnInit = jQuery.proxy(function() {

			// get routing object for navigation
			this.oRouter = sap.ui.core.UIComponent.getRouterFor(this);

			this.oApplicationFacade = sap.ca.scfld.md.app.Application.getImpl().oConfiguration.oApplicationFacade;

			this.oConnectionManager = sap.ca.scfld.md.app.Application.getImpl().getConnectionManager();

			
			this.oApplicationImplementation.setModels(this);
			
			var oPage = this.getView().getContent()[0];
			oPage.setShowNavButton(jQuery.device.is.phone);
			oPage.attachNavButtonPress(this._navBack);
			
			// --------------------------
			var fMyOnBeforeShow = jQuery.proxy(function(evt) {
				this.oApplicationImplementation.defineDetailHeaderFooter(this);
			}, this);

			// register for onBeforeShow
			if (typeof this.onBeforeShow === "function") {
				var fAppOnBeforeShow = jQuery.proxy(this.onBeforeShow, this);
				this.onBeforeShow = function(evt) {
					fAppOnBeforeShow(evt);
					fMyOnBeforeShow(evt);
				};
			} else {
				this.getView().addEventDelegate({
					onBeforeShow : jQuery.proxy(function(evt) {
						fMyOnBeforeShow();
					}, this)
				});
			};
			// -------------------------------------
		}, this);

		var fAppOnInit = jQuery.proxy(this.onInit, this);
		this.onInit = function() {
			fMyOnInit();
			fAppOnInit();
		};
	},

	onInit : function() {
		// do not add any coding here. Just needed in case the App calls onInit() of the super class
	},

	/*********************************************************************************************************************
	 * Obsolete: Use {@link #setHeaderFooterOptions} in order to explicitly set the header and footer when they need to be
	 * changed.
	 */
	getHeaderFooterOptions : function() {
		return null;
	},

	/*********************************************************************************************************************
	 * Call this method in order to reset the header and footer of this page
	 */
	setHeaderFooterOptions : function(oOptions) {
		this.oApplicationImplementation.oDHFHelper.setHeaderFooter(this, oOptions);
	},

	setBtnEnabled : function(sId, bEnabled) {
		if (this._oControlStore.oButtonListHelper) {
			this._oControlStore.oButtonListHelper.setBtnEnabled(sId, bEnabled);
		}
	},

	setBtnText : function(sId, sText) {
		if (this._oControlStore.oButtonListHelper) {
			this._oControlStore.oButtonListHelper.setBtnText(sId, sText);
		}
	},
	
  isMainScreen : function(){
  	return !this._oControlStore.oBackButton;
  },

	_navBack : function() {
		window.history.back();
	}
});

}; // end of sap/ca/scfld/md/controller/BaseDetailController.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.controller.BaseMasterController') ) {
  jQuery.sap.declare('sap.ca.scfld.md.controller.BaseMasterController');
jQuery.sap.require('sap.ui.core.mvc.Controller'); // unlisted dependency retained


sap.ui.core.mvc.Controller
		.extend(
				"sap.ca.scfld.md.controller.BaseMasterController",
				{

					constructor : function() {
						var that = this;
						// Make sure that our init-coding is executed even if the App overrides onInit() and does not call
						// onInit() of the super class.
						var fMyOnInit = jQuery.proxy(function() {
							var bIsInitialCall = true;
							// get routing object for navigation
							this.oRouter = sap.ui.core.UIComponent.getRouterFor(this);

							this.oApplicationImplementation = sap.ca.scfld.md.app.Application.getImpl();
							this.oApplicationFacade = this.oApplicationImplementation.oConfiguration.oApplicationFacade;

							this.oConnectionManager = this.oApplicationImplementation.getConnectionManager();
							this.iRequestCountStart = this.oConnectionManager.iRequestCount;
							this.oApplicationImplementation.setModels(this);
							
							// needed for set item from bookmark navigation
							this.oRouter.attachRoutePatternMatched(function(oEvent) {
								var sName = oEvent.getParameter("name");
								var sNewHash;
								var bIsInitial = bIsInitialCall;

								bIsInitialCall = false;
								this._bIsDetailRoute = false;
								this._bIsMasterRoute = false;

								if (sName === "detail") {
									this._bIsDetailRoute = true;
									sNewHash =  "/" + oEvent.getParameter("arguments").contextPath;

									//if the call is initial the function gets invoked anyway we don't want to invoke it twice
									if(!bIsInitial && this._hashParam !== sNewHash) {
										this._hashParam = sNewHash;
										this._selectDetail();
									}

								}
								if (sName === "master") {
									this._bIsMasterRoute = true;
								}

								this._hashParam = sNewHash;
							}, this);
						}, this);

						var fAppOnInit = jQuery.proxy(this.onInit, this);
						this.onInit = jQuery.proxy(function() {
							fMyOnInit();
							fAppOnInit();
							if (!this.bIsMasterListBindingExists) {
								var oList = this.getList();
								if (oList) {
									var oBinding = oList.getBinding("items");
									this.oApplicationImplementation.setMasterListBinding(this, oBinding);
								}
							}
							// when no request was sent, header and footer will be displayed immediately
							if (this.iRequestCountStart == this.oConnectionManager.iRequestCount) {
								this.oApplicationImplementation.oMHFHelper.defineMasterHeaderFooter(this);
							}
						}, this);
					},

					onInit : function() {
						// do not add any coding here. Just needed in case the App calls onInit() of the super class
					},

					_onMasterListLoaded : function(oEvent) { 
						if(oEvent.getParameter("reason") === "change") {
							this.onDataLoaded();
							this.oApplicationImplementation.onMasterRefreshed(this);
							oEvent.oSource.detachChange(this._onMasterListLoaded, this);

						}
					},

					_onMasterListChanged : function(oEvent) {
						if(oEvent.getParameter("reason") === "change") {
							this.oApplicationImplementation.onMasterChanged(this);
						}
					},

					/*************************************************************************************************************
					 * this method is meant to be overridden by the app It shall return an object describing the header or footer
					 * content Return <code>null</code> if you want to define header and footer on your own (default behavior).
					 * Otherwise return an object with attributes determining the header and footer. The following attributes are
					 * supported: <code>onEditPress</code> a handler for the edit button on the master list. Note that this
					 * button will be displayed if this attribute is available. <code>sI18NMasterTitle</code> the i18n-key for
					 * the title of the master list in the i18n-properties file of the App. Note that the corresponding text
					 * should possess a placeholder for the number of displayed items (e.g. <i>Purchase Orders ({0})</i>) The
					 * <code>sI18NSearchFieldPlaceholder</code> the i18n-key for the placeholder text to be displayed in the
					 * search field. Note that this attribute should only be used if you want to display a more specific text then
					 * default ("Search"). E.g. "Search for Purchase Order ...". Normally, this will only be sensible, if backend
					 * search is enabled or the application defines a very specific frontend search.
					 */
					getHeaderFooterOptions : function() {
						return null;
					},

					setBtnEnabled : function(sId, bEnabled) {
						if (this._oControlStore.oButtonListHelper) {
							this._oControlStore.oButtonListHelper.setBtnEnabled(sId, bEnabled);
						}
					},

					setBtnText : function(sId, sText) {
						if (this._oControlStore.oButtonListHelper) {
							this._oControlStore.oButtonListHelper.setBtnText(sId, sText);
						}
					},

					refreshHeaderFooterForEditToggle : function() {
						this.oApplicationImplementation.oMHFHelper.defineMasterHeaderFooterInner(this);
					},

					_handleSelect : function(oEvent) {
						this.setListItem(oEvent.getParameter("listItem"));
						if (!jQuery.device.is.phone) {
							// note: this only applies when device is in
							// portrait mode
							this.oApplicationImplementation.oSplitContainer.hideMaster();
						}
					},

					_handleItemPress : function(oEvent) {

						this.setListItem(oEvent.getSource());
					},

					getList : function() {
						return this.byId("list");
					},

					setListItem : function(oItem) {

						var oList = this.getList();
						oList.removeSelections();
						oItem.setSelected(true);
						oList.setSelectedItem(oItem, true);

						this.oRouter.navTo("detail", {
							contextPath : oItem.getBindingContext(this.sModelName).getPath().substr(1)
						}, !jQuery.device.is.phone);
					},

					/**
					 * Can be overridden where selection is not the default data load behavior
					 * 
					 */
					onDataLoaded : function() {
						this._selectDetail();
					},

					/**
					 * Initially selects the first item (excluding for phones) Select the second items in case of a grouped list,
					 * select the first one otherwhise
					 */
					_selectDetail : function() {
						var list = this.getList();
						var items = list.getItems();
						
						//Only do this on the master/detail view
						if (!(this._bIsDetailRoute || this._bIsMasterRoute)) {
							return;
						}

						// no items available in list: navigate to empty page
						if (items.length === 0 && this.oRouter._oRoutes.noData !== undefined) {
							this.navToEmptyView();
							return;
						}

						// in case items are available and there are no selected items, select the first item in the list
						// (grouping: select the second item)
						if (!jQuery.device.is.phone && this._bIsMasterRoute && !list.getSelectedItem()) {
							// in case of a grouped list, need to select the second item (first one is the group header)
							if (list.getBindingInfo("items").binding.isGrouped()) {
								if (items.length > 1) {
									this.setListItem(items[1]);
								} else {
									jQuery.sap.log.error("Selection of the first list item failed as there is only 1 item in a grouped list");
								}
							} else {
								this.setListItem(items[0]);
							}
						}

						if(this._bIsDetailRoute) {
							// deeplink scenario: identify corresponding list item from Url hash

							for ( var i = 0; i < items.length; i++) {
								if ((items[i] instanceof sap.m.GroupHeaderListItem)){
									continue;
								}
								if (items[i].getBindingContext(this.sModelName).getPath() != this._hashParam) {
									continue;
								}

								if(!jQuery.device.is.phone) {
									list.removeSelections();
									items[i].setSelected(true);
								}

								return;

							}

							//deeplink but the item was not in the list: pass hash to applyFilterFromContext (needs to be overridden by the app)
							if(this.isBackendSearch()) {
								this.applyFilterFromContext(this._hashParam);
							} else {
								this.navToEmptyView();
							}

						}
					},
					
					/**
					 * @private
					 * Navigates to the empty view
					 */
					navToEmptyView : function() {
						this.oRouter.navTo("noData", {
							viewTitle : "DETAIL_TITLE",
							languageKey : "NO_ITEMS_AVAILABLE"
						});
						return this;
					},

					/**
					 * Can be overrideden to define a App specific frontend search. Note that in most cases it is more sensible to
					 * override {@link applySearchPatternToListItem}
					 * 
					 * @param sFilterPattern
					 *          the content of the search field
					 * @return the number of list items still visible
					 */
					applySearchPattern : function(sFilterPattern) {
						sFilterPattern = sFilterPattern.toLowerCase();
						var aListItems = this.getList().getItems();
						var bVisibility;

						var iCount = 0;
						for ( var i = 0; i < aListItems.length; i++) {
							bVisibility = this.applySearchPatternToListItem(aListItems[i], sFilterPattern);
							aListItems[i].setVisible(bVisibility);
							if (bVisibility) {
								iCount++;
							}
						}
						return iCount;
					},

					/**
					 * This method needs to be overridden in case backend search is active (see {@link isBackendSearch}). It
					 * should modify the list binding such that it reflects the filter entered in the search field. Sample coding:
					 * var oFilter = new sap.ui.model.Filter("MyField", sap.ui.model.FilterOperator.EQ, sFilterPattern); var
					 * aFilters = [oFilter]; oBinding.filter(aFilters);
					 * 
					 * @param sFilterPattern
					 *          the content of the search field
					 * @param oBinding
					 *          the context binding of the list items to be modified.
					 * 
					 * list binding needs to be updated with filter parameter -> this will trigger a new oData get automatically
					 */
					applyBackendSearchPattern : function(sFilterPattern, oBinding) {

					},
					
					/**
					 * @param sContext
					 *           contains the hash provided via bookmark navigation
					 * Deeplink navigation with backend search active: when navigating to the app via bookmark, the bookmarked item
					 * might not be part of the initially loaded list items (usually the case for scenarios where more items exist in the backend
					 * than shown at once in the list). The assumption in this case is that the backend search is active in order to be able to retrieve
					 * further list items. If the check on the initial list against the navigation context value gives no result, this method is being called. 
					 * This method needs to be overridden by apps where this scenario applies; the app has then to take care about retrieving the correct item via backend search
					 */
					applyFilterFromContext : function(sContext) {
						this.navToEmptyView();
					},

					/**
					 * Override this method when defining a custom frontend search. This method will be called for each list item
					 * and decides whether it fulfills the search criteria.
					 * 
					 * @param oItem
					 *          the item to be tested
					 * @param sFilterPattern
					 *          the search pattern
					 * @returns {boolean} whether the item fulfills the search pattern
					 */
					applySearchPatternToListItem : function(oItem, sFilterPattern) {
						if (sFilterPattern == "") {
							return true;
						}
						var oIteshellata = oItem.getBindingContext(this.sModelName).getProperty();
						for ( var sKey in oIteshellata) {
							var sValue = oIteshellata[sKey];
							// if (sValue instanceof Date) {
							// //just for the filter take each number as string
							// sValue = sValue.getDate() + "." +
							// sValue.getMonth() + "." + sValue.getFullYear();
							// }
							if (typeof sValue == "string") {
								if (sValue.toLowerCase().indexOf(sFilterPattern) != -1) {
									return true;
								}
							}
						}
						// if nothing found in unformatted data, check UI
						// elements
						if ((oItem.getIntro() && oItem.getIntro().toLowerCase().indexOf(sFilterPattern) != -1)
								|| (oItem.getTitle() && oItem.getTitle().toLowerCase().indexOf(sFilterPattern) != -1)
								|| (oItem.getNumber() && oItem.getNumber().toLowerCase().indexOf(sFilterPattern) != -1)
								|| (oItem.getNumberUnit() && oItem.getNumberUnit().toLowerCase().indexOf(sFilterPattern) != -1)
								|| (oItem.getFirstStatus() && oItem.getFirstStatus().getText().toLowerCase().indexOf(sFilterPattern) != -1)
								|| (oItem.getSecondStatus() && oItem.getSecondStatus().getText().toLowerCase().indexOf(sFilterPattern) != -1)) {
							return true;
						}
						// last source is attribute array
						var aAttributes = oItem.getAttributes();
						for ( var j = 0; j < aAttributes.length; j++) {
							if (aAttributes[j].getText().toLowerCase().indexOf(sFilterPattern) != -1) {
								return true;
							}
						}
						return false;
					},

					_applyClientSideSearch : function() {
						var sFilterPattern = this._oControlStore.oMasterSearchField.getValue();
						var iCount = this.applySearchPattern(sFilterPattern);
						this.oApplicationImplementation.oMHFHelper.setMasterTitle(this, iCount);
					},

					/**
					 * determines whether search is triggered with each change of the search field content (or only when the user
					 * explicitly starts the search). Default implementation triggers search immediately, exactly when backend
					 * search is disabled (see {@link isBackendSearch}. Override this method if you want 'live' search on backend
					 * or explicit search on frontend.
					 */
					isLiveSearch : function() {
						return !this.isBackendSearch();
					},

					/**
					 * determines whether search (triggered by search field) is performed on backend or frontend (frontend being
					 * default behavior).
					 */
					isBackendSearch : function() {
						return false;
					},

					/**
					 * when ever you bind a master list dynamically you have to call this method
					 */
					registerMasterListBind : function(oList) {
						if (oList) {
							var oBinding = oList.getBinding("items");
							this.oApplicationImplementation.setMasterListBinding(this, oBinding);
						}
						// when no request was sent, header and footer will be displayed immediately
						if (this.iRequestCountStart == this.oConnectionManager.iRequestCount) {
							this.oApplicationImplementation.oMHFHelper.defineMasterHeaderFooter(this);
						}
					}
				});

}; // end of sap/ca/scfld/md/controller/BaseMasterController.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.library') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5) (c) Copyright
 * 		2009-2012 SAP AG. All rights reserved
 */

/* -----------------------------------------------------------------------------------
 * Hint: This is a derived (generated) file. Changes should be done in the underlying
 * source files only (*.type, *.js) or they will be lost after the next generation.
 * ----------------------------------------------------------------------------------- */

/**
 * Initialization Code and shared classes of library sap.ca.scfld.md (1.16.3)
 */
jQuery.sap.declare("sap.ca.scfld.md.library");
jQuery.sap.require('sap.ui.core.Core'); // unlisted dependency retained

/**
 * SAP UI library: Scaffolding for Master Detail applications
 *
 * @namespace
 * @name sap.ca.scfld.md
 * @public
 */


// library dependencies
jQuery.sap.require('sap.ui.core.library'); // unlisted dependency retained

jQuery.sap.require('sap.viz.library'); // unlisted dependency retained

jQuery.sap.require('sap.m.library'); // unlisted dependency retained

jQuery.sap.require('sap.ca.ui.library'); // unlisted dependency retained


// delegate further initialization of this library to the Core
sap.ui.getCore().initLibrary({
  name : "sap.ca.scfld.md",
  dependencies : ["sap.ui.core","sap.viz","sap.m","sap.ca.ui"],
  types: [],
  interfaces: [],
  controls: [],
  elements: [],
  noLibraryCSS: true,
  version: "1.16.3"});


}; // end of sap/ca/scfld/md/library.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.view.empty.controller') ) {
  jQuery.sap.declare('sap.ca.scfld.md.view.empty.controller');

//
sap.ca.scfld.md.controller.BaseDetailController.extend("sap.ca.scfld.md.view.empty", {

	onInit : function() {
		var sLink = document.createElement('link');
		sLink.setAttribute('rel', 'stylesheet');
		sLink.setAttribute('type', 'text/css');
		sLink.setAttribute('href', 'resources/sap/ca/scfld/md/css/flower.css');
		sLink.setAttribute('id', 'emptyView_stylesheet');
		document.getElementsByTagName('head')[0].appendChild(sLink);

		this.oRouter.attachRouteMatched(function(oEvent) {
			if (oEvent.getParameter("name") === "noData") {
				var oArgument = oEvent.getParameter("arguments");
				// set view title
				var oPage = this.byId("sap.ca.scfld.md.view.empty");
				var sTitle= this.oApplicationFacade.oApplicationImplementation.getResourceBundle().getText(
						oArgument.viewTitle);
				if (sTitle == undefined || sTitle == oArgument.viewTitle) {
					//fallback: show message also as title
					sTitle = this.oApplicationFacade.oApplicationImplementation.getUiLibResourceBundle().getText(
							"NO_ITEMS_AVAILABLE");
				};
				oPage.setTitle(sTitle);
				
				// set message text
				var oLabel = this.byId("emptyLabel");				
				var sMessage = this.oApplicationFacade.oApplicationImplementation.getUiLibResourceBundle().getText(
						oArgument.languageKey);
				if (sMessage == undefined || sMessage == oArgument.languageKey) {
					//fallback
					sMessage = this.oApplicationFacade.oApplicationImplementation.getUiLibResourceBundle().getText(
							"NO_ITEMS_AVAILABLE");
				};
				oLabel.setText(sMessage);
			}
		}, this);
	}

});

}; // end of sap/ca/scfld/md/view/empty.controller.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.app.ApplicationImplementation') ) {
jQuery.sap.declare("sap.ca.scfld.md.app.ApplicationImplementation");





sap.ui.base.ManagedObject.extend("sap.ca.scfld.md.app.ApplicationImplementation", {

	metadata : {

		properties : {
			identity : "string",
			component : "object",
			oViewHook : "string"
		},
		methods : ["getConnectionManager"]
	},

	init : function() {

	},
	
	sI18N : "i18n",

	startApplication : function(oConfiguration) {

		this.oMHFHelper = new sap.ca.scfld.md.app.MasterHeaderFooterHelper(this);
		this.oDHFHelper = new sap.ca.scfld.md.app.DetailHeaderFooterHelper(this);
		this.oFHFHelper = new sap.ca.scfld.md.app.FullScreenHeaderFooterHelper(this);
		this.oConfiguration = oConfiguration;
		this.aMasterKeys = oConfiguration.getMasterKeyAttributes();
		this.aKeyValues = null;

		var oLocale = sap.ui.getCore().getConfiguration().getFormatLocale();
		var sBundleName = this.getIdentity() + ".i18n.i18n";
		this.AppI18nModel = new sap.ui.model.resource.ResourceModel({
			bundleName : sBundleName,
			bundleLocale : oLocale
		});

		var oComponent = this.getComponent();
		if (!sap.ui.getCore().getConfiguration().getDisableCustomizing()) {
			var oMetadata = oComponent.getMetadata();
			if (oMetadata) {
				var oExtServices = oMetadata.getConfig("sap.ca.i18Nconfigs");
				if (oExtServices.bundleName) {
					this.AppI18nModel.enhance(oExtServices);
				}
			}
		}
		this.UilibI18nModel = new sap.ui.model.resource.ResourceModel({
			bundleName : "sap.ca.scfld.md.i18n.i18n",
			bundleLocale : oLocale
		});

		this.oConnectionManager = sap.ca.scfld.md.app.ConnectionManager.getNewInstance(this.getIdentity(),
				this.oConfiguration, {}, this.getComponent());

		this.bIsPhone = jQuery.device.is.phone;

		var oHookPage = sap.ui.getCore().byId(this.getOViewHook());
		oHookPage.setModel(this.AppI18nModel, this.sI18N);

	},

	getResourceBundle : function() {
		return this.AppI18nModel.getResourceBundle();
	},

	getUiLibResourceBundle : function() {
		return this.UilibI18nModel.getResourceBundle();
	},

	getODataModel : function(sName) {
		if (sName == this.sI18N){
			return this.AppI18nModel;
		}
		return this.oConnectionManager.getModel(sName);
	},
	
	setModels : function(oController) {
		var view = oController.getView();
		view.setModel(this.AppI18nModel, this.sI18N);
		// FIXME: this should not be needed but don't work if
		// not here
		view.setModel(sap.ui.getCore().getModel("device"), "device");
		
		jQuery.each(this.oConnectionManager.modelList, function(name, model) {
			if (name == "undefined") {
				view.setModel(model);
			} else {
				view.setModel(model, name);
			}
		});
	},

	isMock : function() {
		// The "reponder" URL parameter defines if the app shall run with mock
		// data
		var responderOn = jQuery.sap.getUriParameters().get("responderOn");

		// set the flag for later usage
		return ("true" === responderOn);
	},

	getConnectionManager : function() {

		return this.oConnectionManager;
	},

	onMasterRefreshed : function(oController) {
		this.setStoredSelectedItem(oController);
	},

	// Called each time the list binding is changed
	onMasterChanged : function(oController) {
		this.oMHFHelper.defineMasterHeaderFooter(oController);
	},

	setStoredSelectedItem : function(oController) {
		if (!this.aKeyValues) {
			return;
		}
		var oList = oController.getList();
		var aItems = oList.getItems();
		if (aItems.length == 0)
		// empty list
		{
			return;
		}
		oList.removeSelections();
		for ( var i = 0; i < aItems.length; i++) {
			var bFound = true;
			var oListItem = aItems[i];
			if ((oListItem instanceof sap.m.GroupHeaderListItem)){
				continue;
			}
			var oItemBinding = oListItem.getBindingContext(this.sModelName);
			for ( var j = 0; bFound && j < this.aKeyValues.length; j++) {
				bFound = this.aKeyValues[j] == oItemBinding.getProperty(this.aMasterKeys[j]);
			}
			if (bFound) {
				// only phone: set line as selected
				if (this.bIsPhone) {
					oListItem.setSelected(true);
					oList.setSelectedItem(oListItem, true);
				}
				break;
			}
		}
		// stored item not found in refreshed list; select first list entry
		if (!bFound) {
			var oListItem = aItems[0];
		}
		// only non phone (split mode): trigger lead selection including navigation to detail
		if (!this.bIsPhone) {
			oList.fireSelect({
				listItem : oListItem
			});
		}
		return;
	},

	// set header and footer of a detail page
	defineDetailHeaderFooter : function(oController) {
		this.oDHFHelper.defineDetailHeaderFooter(oController);
	},

	defineFullscreenHeaderFooter : function(oController) {
		this.oFHFHelper.defineHeaderFooter(oController);

	},

	setSplitContainer : function(oSplitContainer) {
		this.oSplitContainer = oSplitContainer;
	},
	
	registerExitModule : function(fExitModule){
		if (!this.aExitModules){
			this.aExitModules = [];
			var oComponent = this.getComponent();
			if (oComponent.exit){ 
			  var fAppExit = jQuery.proxy(oComponent.exit, oComponent);
			} else {
				var fAppExit = function(){};
			}
			oComponent.exit = jQuery.proxy(function(){
	      for (var i = 0; i < this.aExitModules.length; i++){
	      	this.aExitModules[i]();
	      }
	      fAppExit();
			}, this);
		}
		this.aExitModules.push(fExitModule);
	},
	
	setMasterListBinding : function(oController, oBinding){
		if (oController._oMasterListBinding){
			oController._oMasterListBinding.detachChange(oController._onMasterListLoaded, oController);
			oController._oMasterListBinding.detachChange(oController._onMasterListChanged, oController);
		}

		oController._oMasterListBinding = oBinding;
		if (oController._oMasterListBinding){
			oController._oMasterListBinding.attachChange(oController._onMasterListLoaded, oController);
			oController._oMasterListBinding.attachChange(oController._onMasterListChanged, oController);
		}
	}
});


}; // end of sap/ca/scfld/md/app/ApplicationImplementation.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.app.Application') ) {
jQuery.sap.declare("sap.ca.scfld.md.app.Application");


jQuery.sap.require('sap.ui.app.Application'); // unlisted dependency retained

jQuery.sap.require('sap.m.MessageToast'); // unlisted dependency retained


sap.ui.base.ManagedObject.extend("sap.ca.scfld.md.app.Application", {

    metadata: {
        properties: {
            identity: "string",
            oViewHook: "string",
            component: "object"
        }
    },
    constructor: function (sId, mSettings) {
        // super
        sap.ui.base.ManagedObject.apply(this, arguments);

        // wait until Core is initialized to create the models & root component
        sap.ui.getCore().attachInit(jQuery.proxy(function () {

            // call the application controller
            this.main();

        }, this));

    },

    init: function () {
        // set device model
        var deviceModel = new sap.ui.model.json.JSONModel({
            isTouch: sap.ui.Device.support.touch,
            isNoTouch: !sap.ui.Device.support.touch,
            isPhone: jQuery.device.is.phone,
            isNoPhone: !jQuery.device.is.phone,
            listMode: (jQuery.device.is.phone) ? "None"
                : "SingleSelectMaster",
            listItemType: (jQuery.device.is.phone) ? "Active"
                : "Inactive"
        });
        deviceModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);
        sap.ui.getCore().setModel(deviceModel, "device");
    },

    main: function () {
        var oApplicationImplementation = new sap.ca.scfld.md.app.ApplicationImplementation(
            {
                identity: this.getIdentity(),
                oViewHook: this.getOViewHook(),
                component: this.getComponent()
            });

        // create a static method to retrieve this instance
        // (used by BaseMasterController)
        sap.ca.scfld.md.app.Application.getImpl = jQuery.sap
            .getter(oApplicationImplementation);

        var oApplicationFacade = new sap.ca.scfld.md.ApplicationFacade(
            oApplicationImplementation);

        jQuery.sap.require(this.getIdentity() + ".Configuration");

        var oConfigClass = jQuery.sap.getObject(this.getIdentity()+ ".Configuration");
        var oConfiguration = new oConfigClass();
        oConfiguration._setApplicationFacade(oApplicationFacade);

        // show message if in demo mode
        if (oApplicationImplementation.isMock()) {
            var msg = "Running in demo mode with mock data";
            sap.m.MessageToast.show(msg, {
                duration: 1000
            });
        }

        oApplicationImplementation.startApplication(oConfiguration);

    }

});
}; // end of sap/ca/scfld/md/app/Application.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.controller.BaseFullscreenController') ) {
  jQuery.sap.declare('sap.ca.scfld.md.controller.BaseFullscreenController');
jQuery.sap.require('sap.ui.core.mvc.Controller'); // unlisted dependency retained





//
sap.ui.core.mvc.Controller.extend("sap.ca.scfld.md.controller.BaseFullscreenController", {

	constructor : function() {
		this.oApplicationImplementation = sap.ca.scfld.md.app.Application.getImpl();
		// Make sure that our init-coding is executed even if the App overrides onInit() and does not call
		// onInit() of the super class.
		var fMyOnInit = jQuery.proxy(function() {

			// get routing object for navigation
			this.oRouter = sap.ui.core.UIComponent.getRouterFor(this);

			this.oApplicationFacade = this.oApplicationImplementation.oConfiguration.oApplicationFacade;

			this.oConnectionManager = this.oApplicationImplementation.getConnectionManager();

			this.oApplicationImplementation.setModels(this);

            this.oApplicationImplementation.defineFullscreenHeaderFooter(this);

			// --------------------------
			var fMyOnBeforeShow = jQuery.proxy(function(evt) {

			}, this);

			// register for onBeforeShow
			if (typeof this.onBeforeShow === "function") {
				var fAppOnBeforeShow = jQuery.proxy(this.onBeforeShow, this);
				this.onBeforeShow = function(evt) {
					fAppOnBeforeShow(evt);
					fMyOnBeforeShow(evt);
				};
			} else {
				this.getView().addEventDelegate({
					onBeforeShow : jQuery.proxy(function(evt) {
						fMyOnBeforeShow();
					}, this)
				});
			};
			// -------------------------------------
		}, this);

		var fAppOnInit = jQuery.proxy(this.onInit, this);
		this.onInit = function() {
			fMyOnInit();
			fAppOnInit();
		};
	},

	onInit : function() {
		// do not add any coding here. Just needed in case the App calls onInit() of the super class
	},

	/*********************************************************************************************************************
   * Obsolete: Use {@link #setHeaderFooterOptions} in order to explicitly set the header and footer when they need to be changed.
	 */
	getHeaderFooterOptions : function() {
		return null;
	},
	
	/*********************************************************************************************************************
	 * Call this method in order to reset the header and footer of this page
	 */	
	setHeaderFooterOptions : function(oOptions){
		if (!this._oFullScreenHeaderFooterHelper){
			this._oFullScreenHeaderFooterHelper = new sap.ca.scfld.md.app.FullScreenHeaderFooterHelper(this.oApplicationImplementation);
		}
		this._oFullScreenHeaderFooterHelper.setHeaderFooter(this, oOptions);
	},

	setBtnEnabled : function(sId, bEnabled) {
    if (this._oControlStore.oButtonListHelper){
    	this._oControlStore.oButtonListHelper.setBtnEnabled(sId, bEnabled);
    }
	},
	
	setBtnText : function(sId, sText){
    if (this._oControlStore.oButtonListHelper){
    	this._oControlStore.oButtonListHelper.setBtnText(sId, sText);
    }		
	},
	
	/**
	 * Refreshes the model
	 */
	_refresh : function(channelId, eventId, data) {

		if (data && data.context) {

			// set context of selected master object
			this.getView().setBindingContext(data.context);

			// scroll to top of page
			// this.getView().byId("page").scrollTo(0);
		}
	},

	_navBack : function() {
		window.history.back();
	},

  isMainScreen : function(){
  	return true;
  }
});

}; // end of sap/ca/scfld/md/controller/BaseFullscreenController.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.ConfigurationBase') ) {
jQuery.sap.declare("sap.ca.scfld.md.ConfigurationBase");





sap.ui.base.ManagedObject.extend("sap.ca.scfld.md.ConfigurationBase", {
	metadata : {
		properties : {
			"identifier" : "string"
		},
		publicMethods : ["setApplicationFacade"]
	},

	_setApplicationFacade : function(oApplicationFacade) {
		this.oApplicationFacade = oApplicationFacade;
		this.setApplicationFacade(oApplicationFacade);
	},	

	
	/**
	 * Override this method when you want to store a reference to the <code>ApplicationFacade</code> in some place where you can
	 * access it. Note that all controllers inheriting from the <code>BaseMaster/Detail/FullscreenController</code> automatically
	 * possess an attribute <code>oApplicationFacade</code>. </br>
	 * However, it may be useful to have access to the facade e.g. in a class providing formatters.
	 * @param oApplicationFacade the application facade for this App
	 */	
	setApplicationFacade : function(oApplicationFacade) {

	},

	// will be removed soon. Use method in ApplicationFacade
	isMock : function() {
		// The "reponder" URL parameter defines if the app shall run with mock
		// data
		var responderOn = jQuery.sap.getUriParameters().get("responderOn");

		// set the flag for later usage
		return ("true" === responderOn);
	},

	/**
	 * Specifies the list of attributes that identify a list item
	 * 
	 * @returns {array} the list of attributes (strings) of a master list item that identify one entry.
	 */
	getMasterKeyAttributes : function() {
		return null;
	},

	/**
	 * Getter for the service list to be used as source for the Connection Manager
	 * 
	 * @returns {object} the list of ODataModel to instantiate with their corresponding url / mock url
	 */
	getServiceList : function() {
		return null;
	},

	/**
	 * Getter for the list of parameters to be excluded from appending to the URL for the Services
	 * 
	 * @returns {array} the list of parameters to be excluded from appending to the URL for the Services
	 */
	getExcludedQueryStringParameters : function() {
		return null;
	},

});

}; // end of sap/ca/scfld/md/ConfigurationBase.js
if ( !jQuery.sap.isDeclared('sap.ca.scfld.md.ComponentBase') ) {
// define a root UIComponent which exposes the main view
jQuery.sap.declare("sap.ca.scfld.md.ComponentBase");
jQuery.sap.require('sap.ui.core.UIComponent'); // unlisted dependency retained


jQuery.sap.require('sap.ui.core.routing.Router'); // unlisted dependency retained

jQuery.sap.require('sap.ui.core.routing.History'); // unlisted dependency retained

jQuery.sap.require('sap.m.routing.RouteMatchedHandler'); // unlisted dependency retained


sap.ui.core.UIComponent.extend("sap.ca.scfld.md.ComponentBase", {
	constructor : function(sId, mSettings) {
		this._aQueue = [];

		// merge base Init and app init
		var fAppInit;
		var fBaseInit = jQuery.proxy(function() {
			sap.ui.core.UIComponent.prototype.init.apply(this, arguments); // calls createContent (among others)

			//this guy handles the navigation
			this._routeMatchedHandler = new sap.m.routing.RouteMatchedHandler(this.getRouter());
		}, this);

		fAppInit = jQuery.proxy(this.init, this);
		this.init = function() {
			fBaseInit();
			fAppInit();
			this.getRouter().initialize();
		}

		this._aExitModules = [];
		var fBaseExit = jQuery.proxy(function() {
			for ( var i = 0; i < this._aExitModules.length; i++) {
				this._aExitModules[i]();
			}
		}, this);
		if (this.exit) {
			var fAppExit = jQuery.proxy(this.exit, this);
		} else {
			var fAppExit = function() {
			};
		}
		this.exit = function() {
			fAppExit()
			fBaseExit();
		};
		sap.ui.core.UIComponent.prototype.constructor.apply(this, arguments);
	},

	init : function() {

	},

	_registerExitModule : function(fExitModule) {
		this._aExitModules.push(fExitModule);
	}
});

sap.ca.scfld.md.ComponentBase.createMetaData = function(sAppType, oAppMeta) {
	var setRouteDefaults = function(oDefaults, oRoutes) {
		for ( var sRouteName in oRoutes) {
			if (!oRoutes[sRouteName].targetControl && oDefaults.targetControl) {
				oRoutes[sRouteName].targetControl = oDefaults.targetControl;
			}

			if (!oRoutes[sRouteName].targetAggregation && oDefaults.targetAggregation) {
				oRoutes[sRouteName].targetAggregation = oDefaults.targetAggregation;
			}

			if (!oRoutes[sRouteName].viewPath && oDefaults.viewPath) {
				oRoutes[sRouteName].viewPath = oDefaults.viewPath;
			}

			if (!oRoutes[sRouteName].viewLevel && oDefaults.viewLevel) {
				oRoutes[sRouteName].viewLevel = oDefaults.viewLevel;
			}
		}
		return oRoutes;
	};

	var oMeta = {};

	// build header data
	for ( var sPropName in oAppMeta) {
		if (sPropName !== "viewPath" && sPropName !== "masterPageRoutes" && sPropName !== "detailPageRoutes"
				&& sPropName !== "fullScreenPageRoutes") {
			oMeta[sPropName] = oAppMeta[sPropName];
		}
	}

	if (sAppType === "MD") {
		oMeta.routing = {
			"config" : {
				"viewType" : "XML",
				"viewPath" : oAppMeta.viewPath,
				"targetAggregation" : "detailPages",
				"viewLevel" : undefined, // the masterDetailRoute and the fioriContentRoute should rely on the browser
				// history direction
				"clearTarget" : false
			},
			"routes" : {
				"masterDetail" : {
					"view" : "MainSplitContainer",
					"name" : "masterDetail",
					"viewPath" : "sap.ca.scfld.md.view",
					"targetControl" : "fioriContent", // This is the control in which the new view will be placed
					"targetAggregation" : "pages", // This is the aggregation in which the new view will be placed
					"pattern" : "_neverusethispattern_", // To be removed as soon as 1.16.3 is used -> central fix in core
					"subroutes" : {
						"master" : { // master is the name of the route
							"pattern" : "", // will be the url and from has to be provided in the data
							"view" : "S2",
							"targetControl" : "MainSplitContainer",
							"targetAggregation" : "masterPages",
							"viewLevel" : 0,
							"subroutes" : {
								"detail" : {
									"pattern" : "detail/{contextPath}",
									"view" : "S3",
									"viewLevel" : 1
								},
								"noData" : {
									"pattern" : "noData/{viewTitle}/{languageKey}",
									"viewPath" : "sap.ca.scfld.md.view",
									"view" : "empty",
									"viewLevel" : 1
								}
							}
						},
					}
				},
				"fullScreen" : {
					"view" : "App",
					"viewPath" : "sap.ca.scfld.md.view",
					"targetControl" : "fioriContent", // This is the control in which the new view will be placed
					"targetAggregation" : "pages", // This is the aggregation in which the new view will be placed
					"pattern" : "_neverusethispattern_", // To be removed as soon as 1.16.3 is used -> central fix in core
					"subroutes" : {}
				}
			}
		};
	} else {
		oMeta.routing = {
			"config" : {
				"viewType" : "XML",
				"viewPath" : oAppMeta.viewPath,
				"targetAggregation" : "pages",
				"viewLevel" : undefined, // the masterDetailRoute and the fioriContentRoute should rely on the browser
				// history direction
				"clearTarget" : false
			},
			"routes" : {
				"fullScreen" : {
					"view" : "App",
					"viewPath" : "sap.ca.scfld.md.view",
					"targetControl" : "fioriContent", // This is the control in which the new view will be placed
					"targetAggregation" : "pages", // This is the aggregation in which the new view will be placed
					"subroutes" : {
						"noData" : {
							"pattern" : "noData/{viewTitle}/{languageKey}",
							"viewPath" : "sap.ca.scfld.md.view",
							"view" : "empty",
							"viewLevel" : 2
						}
					}
				}
			}
		};
	}
	var oDetailRoutes;
	var oMasterRoutes;
	var oFullScreenRoutes;
	try {
		oDetailRoutes = oMeta.routing.routes.masterDetail.subroutes.master.subroutes;
	} catch (e) {
	}
	try {
		oMasterRoutes = oMeta.routing.routes.masterDetail.subroutes;
	} // We only support one master
	catch (e) {
	}
	try {
		oFullScreenRoutes = oMeta.routing.routes.fullScreen.subroutes;
	} catch (e) {
	}

	if (oDetailRoutes) {
		jQuery.extend(true, oDetailRoutes, oAppMeta.detailPageRoutes);
	}
	if (oMasterRoutes) {
		jQuery.extend(true, oMasterRoutes, oAppMeta.masterPageRoutes);
	}
	if (oFullScreenRoutes) {
		jQuery.extend(true, oFullScreenRoutes, oAppMeta.fullScreenPageRoutes);
	}

	setRouteDefaults({
		targetControl : "MainSplitContainer",
		targetAggregation : "masterPages",
		viewPath : oAppMeta.viewPath,
		viewLevel : 0
	}, oMasterRoutes);
	setRouteDefaults({
		// targetControl : "MainSplitContainer",
		targetAggregation : "detailPages",
		viewPath : oAppMeta.viewPath,
		viewLevel : 1
	}, oDetailRoutes);
	setRouteDefaults({
		targetControl : "app",
		targetAggregation : "pages",
		viewPath : oAppMeta.viewPath,
		viewLevel : 2
	}, oFullScreenRoutes);

	return oMeta;

};

}; // end of sap/ca/scfld/md/ComponentBase.js
